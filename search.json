[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Ecological theory for the biodiversity crisis",
    "section": "",
    "text": "Welcome\nThis is the website for “Ecological theory for the biodiversity crisis” book. This book teaches ecological theory with a hands-on approach using the R language. The ecological theory topics are often presented with an emphasis on their relevance for biodiversity conservation and management.\nThis book was created with the Quarto publishing system.",
    "crumbs": [
      "Preface"
    ]
  },
  {
    "objectID": "index.html#license",
    "href": "index.html#license",
    "title": "Ecological theory for the biodiversity crisis",
    "section": "License",
    "text": "License\nThis website is (and will always be) free to use, and is licensed under the Creative Commons Attribution-NonCommercial-NoDerivs 4.0 License.",
    "crumbs": [
      "Preface"
    ]
  },
  {
    "objectID": "index.html#footnotes",
    "href": "index.html#footnotes",
    "title": "Ecological theory for the biodiversity crisis",
    "section": "",
    "text": "An R package is a set of functions developed by someone to extend the basic functionality of R.↩︎\nFor a guide on best practices for reproducible code see https://www.britishecologicalsociety.org/wp-content/uploads/2019/06/BES-Guide-Reproducible-Code-2019.pdf↩︎",
    "crumbs": [
      "Preface"
    ]
  },
  {
    "objectID": "ecophysiology.html",
    "href": "ecophysiology.html",
    "title": "1  Ecophysiology and the climate space: when to bask in the sun?",
    "section": "",
    "text": "1.1 A model for the body temperature of an animal\nAnimals can be divided in two big groups in regard to the way they regulate their temperature: ecoctherms and endotherms (Figure 1.1). Endotherms such as mammals and birds are able to regulate their temperature by producing heat through metabolism. Ectotherms in contrast must regulate their temperature by obtaining heat from the environment. By obtaining energy from the environment, ectotherms have lower energy demands than endotherms, which have to be burning energy all the time to keep their bodies warm. Both do have to avoid getting too hot because indeed there can bee too much from a good thing.\nTo build a model of the body temperature of an animal, let’s consider a lizard that is perched in a rock basking in the sun (Figure 1.2). The lizard receives heat from the direct solar radiation than can be measured in for instance calories per hour. It can also receive indirect solar radiation, reflected for instance by the ground. The lizard also exchanges heat with the surrounding air through convection. If the lizard body temperature is higher than the surrounding air temperature it will lose heat, while if the lizard body temperature is lower than it will gain heat. The rate at which this exchange of heat through convection happens depends on the body of the animal and the properties of its skin. These properties are captured in the heat transfer coefficient, which can be measured as calories per hour per degree Celsius. Similarly, the lizard can receive heat by conduction from being in contact with a warm rock, or lose heat to the rock if the rock is colder than the lizard’s body temperature. Finally the animal can lose heat through evapotranspiration, this is by transpiring water that has a cooling effect when it evaporates. I also like to think about this model as representing our own experience on the beach. We can be laying on a towel receiving heat by conduction from the sand and solar radiation from the sun. If the air temperature is warm, we can become uncomfortable in the sun and we may seek a shade to reduce the input from solar radiation, but if there is a cool brise we may be able to stay in the sun a bit longer. If the air temperature is really cold and it’s really windy our skin hair may rise to reduce the convection coefficient.\nThe total flow of energy into the lizard, also known as the heat exchange equation, can be written as \\[f=q-k(b-a) \\tag{1.1}\\]\nwhere\nIf the energy flow is positive, then the lizard is warming, while if it is negative then the lizard is cooling. The equilibrium1 happens when the energy flow is zero and so the the lizard is neither cooling nor warming. If we solve Equation 1.1 for equilibrium by replacing \\(f\\) with zero and expanding the right-hand side of the equation,\n\\[\n0=q-k\\ b+k\\ a\n\\]\nand rearranging for \\(b\\) we find the equilibrium body temperature that we denote with a hat,\n\\[\n\\hat{b}=q/k+a.\n\\tag{1.2}\\]\nLet’s see if this equation makes sense. It says that the equilibrium body temperature is the sum of the solar radiation divided by the convection coefficient with the air temperature. So, at minimum the equilibrium body temperature is equal to the air temperature when the solar radiation is zero (e.g. during the night). But when the solar radiation is greater than zero then the equilibrium body temperature is higher than the air temperature as one would expect. How much higher? Well that depends on the convection coefficient. If the convection coefficient is very high then the body temperature is mainly determined by the air temperature. In contrast, if the convection coefficient is very low then the solar radiation can contribute significantly to the body temperature.\nIt’s time to start using R to explore this model. For instance, we can use R to plot the relationship between the body temperature and the solar radiation. First we create variables for the heat coefficient and the air temperature and assign some valuues:\nk = 50  #convection coefficient (cal/h/ºC)\na = 18  #air temperature (ºC)\nWe want to plot the equilibrium body temperature for a range of solar radiation values. So we create a vector with radiation values, for instance ranging from 0 cal/h to 1500 cal/h in steps of 500. I am going to use big letters to denote vectors in R code, in contrast with scalars which I will denote with small letters.\nQ = seq(0,1500,by=500)  #vector with radiation values\nNow we can write Equation 1.2 in R to produce a vector of the equilibrium body temperatures for each value of radiation.\nB_eq = Q/k+a   #vector with equilibrium body temperatures\nLet’s examine the values of the vector, by binding the two vectors as a matrix,\nrbind(Q,B_eq)\n\n     [,1] [,2] [,3] [,4]\nQ       0  500 1000 1500\nB_eq   18   28   38   48\nThis is nice as we can see the values of the equilibrium body temperature for each value of solar radiation. But let’s visualize this as a graph, by plotting these vectors in R,\nplot(Q,B_eq,type=\"l\")\n\n\n\n\n\n\n\nFigure 1.3: Equilibrium body temperature as a function of solar radiation.\nNote that we added type=\"l\" as a parameter of the plot to have a line drawn instead of a sequence of dots in the plot.",
    "crumbs": [
      "Ecology of individuals",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Ecophysiology and the climate space: when to bask in the sun?</span>"
    ]
  },
  {
    "objectID": "ecophysiology.html#a-model-for-the-body-temperature-of-an-animal",
    "href": "ecophysiology.html#a-model-for-the-body-temperature-of-an-animal",
    "title": "1  Ecophysiology and the climate space: when to bask in the sun?",
    "section": "",
    "text": "Figure 1.1: Shrews (left, Crocidura russula) are ectotherms and have high energy demands, eating almost their body weight every day. In contrast, vipers (right, Vipera seonae) can go days without eating, or even hibernate or aestivate as needed.\n\n\n\n\n\n\n\n\n\n\nFigure 1.2: The energy flows of a lizard basking in the sun.\n\n\n\n\n\n\n\\(f\\) is the energy flow (cal/h),\n\\(q\\) is the quantity of heat in the solar radiation (cal/h),\n\\(k\\) is the convection coefficient (cal/h/ºC),\n\\(b\\) is the body temperature (ºC) and\n\\(a\\) is the air temperature (ºC).",
    "crumbs": [
      "Ecology of individuals",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Ecophysiology and the climate space: when to bask in the sun?</span>"
    ]
  },
  {
    "objectID": "ecophysiology.html#understanding-the-climate-space",
    "href": "ecophysiology.html#understanding-the-climate-space",
    "title": "1  Ecophysiology and the climate space: when to bask in the sun?",
    "section": "1.2 Understanding the climate space",
    "text": "1.2 Understanding the climate space\nAnother way of looking at the heat exchange equation Equation 1.1 is to look at what combinations of air temperature and solar radiation values are livable for the lizard. This is also known as the climate space of an organism. In order to explore the climate space of the lizard we need to first assess what are the maximum and minimum body temperature that the lizard can experience. Let’s assume those are respectively 36 and 24ºC and store them in R,\n\nb_max = 36  #maximum body temperature (ºC)\nb_min = 24  #minimum body temperature (ºC)\n\nWe now want to solve Equation 1.1 at equilibrium for the air temperature as a function of the solar radiation and body temperature. We can do this by rearranging Equation 1.2,\n\\[\na=b-q/k.\n\\tag{1.3}\\]\nThis equation can be then used in R to calculate vectors of the maximum and minimum survivable air temperatures for each value of the solar radiation in vector Q,\n\nA_max = b_max - Q/k  #vector with maximum air temperatures\nA_min = b_min - Q/k  #vector with minimum air temperatures\n\nWe can now visualize the climate space, this is, the combination of solar radiation and air temperatures in which the lizard can survive, by plotting these two equations (i.e. by plotting lines with x coordinates given by the vector Q and the y coordinates given by the vectors A_max and A_min),\n\nplot(Q, A_max,type=\"l\", #plots the maximum survivable air temperature\n     xlab=\"Solar radiation (cal/h)\", #adds x and y axis labels to the plot\n     ylab=\"Air temperature (ºC)\")    \nlines(Q,A_min) #adds line for the minimum survivable air temperature\n\n\n\n\n\n\n\nFigure 1.4: The climate space of a lizard.\n\n\n\n\n\nLet’s paint the area between the two lines which corresponds to the climate space of the lizard. We can use the R function polygon, to which we need to give the set of x and y coordinates delimiting the climate space as vectors. For instance, the upper lower corner can be the first coordinate, being 0 for the x vector and b_min for the y vector. The right upper corner is 1500 for x and b_max-1500/k for y.\n\nX = c(0,0,1500,1500)\nY = c(b_min,b_max,b_max-1500/k,b_min-1500/k)\npolygon(X,Y,col=\"green\")\n\nNow that we have the climate space we can plot on top of it some empirical data of how the conditions are in the field during the day. We can for instance consider two micro-habitats, a rock (in the sun) and a bush (in the shade). Suppose we obtain some data from temperature loggers that were installed in each micro-habitat , recording every three hours the values of temperature and radiation as tabled below.\n\n\n\nTable 1.1: Hypothetical radiation values in two micro-habitats and air temperatures at different times of the day.\n\n\n\n\n\n\n\n\n\n\n\nTime (hh:mm)\nRadiation rock (cal/h)\nRadiation bush (cal/h)\nTemperature (ºC)\n\n\n\n\n00:00\n150\n150\n18\n\n\n03:00\n150\n150\n13\n\n\n06:00\n800\n450\n10\n\n\n09:00\n1100\n600\n14\n\n\n12:00\n1300\n650\n21\n\n\n15:00\n1200\n650\n24\n\n\n18:00\n800\n350\n22\n\n\n21:00\n400\n200\n20\n\n\n\n\n\n\nWe can overlay these values of temperatures and radiations on the plot to understand which microhabitat should the lizard choose at each time of the day. First we create a vector for each column of Table 1.1. Note that we must enclose the times of the day in commas as they are strings. We also append at the end of the vector the values for 0:00 in order to close the lines (otherwise there would be a gap between 21:00 and 0:00).\n\n#Times of the day\nT = c(\"00:00\",\"03:00\",\"06:00\",\"09:00\",\n      \"12:00\",\"15:00\",\"18:00\",\"21:00\",\"00:00\")\n\n#Solar radiation in the rock habitat\nRock_q = c(150,150,800,1100,1300,1200,800,400,150)\n\n#Air temperature in the rock habitat\nRock_a = c(18,13,10,14,21,24,22,20,18)\n\n#Solar radiation in the bush habitat\nBush_q = c(150,150,450,600,650,650,350,200,150)\n\n#   Air temperature in the bush habitat\nBush_a = c(18,13,10,14,21,24,22,20,18)\n\nWe overlay these vectors in the figure by invoking the function lines(Xcoor,Ycoord) for each micro-habitat. We add labels to each point to show the correspondence between each point and the time of the day.\n\nlines(Rock_q,Rock_a,col=\"orange\")\ntext(Rock_q,Rock_a,T)\n\nlines(Bush_q,Bush_a,col=\"blue\")\ntext(Bush_q,Bush_a,T)\n\n\n\n\n\n\n\n\n\nFigure 1.5: The climate space of a lizard with the conditions of two microhabitats ploted at different times of the day: rock (orange), bush (blue).",
    "crumbs": [
      "Ecology of individuals",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Ecophysiology and the climate space: when to bask in the sun?</span>"
    ]
  },
  {
    "objectID": "ecophysiology.html#from-ecophysiological-models-to-species-distribution-models",
    "href": "ecophysiology.html#from-ecophysiological-models-to-species-distribution-models",
    "title": "1  Ecophysiology and the climate space: when to bask in the sun?",
    "section": "1.3 From ecophysiological models to species distribution models",
    "text": "1.3 From ecophysiological models to species distribution models\nIn the previous section we developed a simple mechanistic model for the climate space of an organism. This is a micro-habitat level climate space. But one can also infer the climate space from the distribution of a species at the macro-habitat level. They are different but they are conceptually similar. The inference of such macro climate space is an area where species distribution models excel (for more on species distribution models check for example (Guisan, Thuiller, and Zimmermann 2017)). The idea is relatively simple. One starts with a bunch of locations of a species in geographical space. Then, one obtains the climate characteristics for those locations, and then plots those locations in climate space. The convex hull in climate space delimited by those locations is the macro-habitat climate space. What species distribution models (SDMs) learn to do is to delineate that climate space, this is, SDMs try to predict the probability of a species occurring somewhere in the climate space by learning from presences and absences from species. Then the SDM can extrapolate again what happens in geographical space, by predicting the species occurence probability for any point based on the climate data for that point. Without getting all the way into a full blown SDM, let’s try to follow some of the basics.\n\n\n\n\n\n\nFigure 1.6: The Iberian emerald lizard, Lacerta schreiberi.\n\n\n\nI will illustrate this with one my favorite species, the Iberian emerald lizard, Lacerta schreiberi, a species endemic to the Iberian peninsula, often found near water streams in mountain landscapes, but also in other habitats. First we obtain the presences for a species from GBIF (Global Biodiversity Information Facility, http://www.gbif.org). GBIF is a repository for biodiversity observations, and has over three billions of occurrences of over a million species all over the world at the time I am writing these words. Natural history museums, citizen science platforms such as iNaturalist ( http://www.inaturalist.org) and eBird (http://www.ebird.org), and scientists, publish their species records in GBIF using a data format called Darwin Core. There is a R package that allows one to download observations from GBIF and also other relevant geodata, the geodata package. We will be doing some geospatial processing, so let’s load also the terra package.\n\nlibrary(geodata)\nlibrary(terra)\nlibrary(predicts)\nlibrary(ggplot2)\n\nWe download the observations of Lacerta schreiberi from GBIF with the function sp_occurence(genus,species). We also download a world map with the function world(path), where path should point towards a local directory where we want to store the data.\n\nocc &lt;- sp_occurrence(\"Lacerta\",\"schreiberi\") \nworld_data &lt;- world(path = \".\") #download world countries limits\next_eur &lt;- c(-15,45,35,72) # coordinates of European extent\n\n#download bioclim data\nbioclim &lt;- worldclim_global(var = 'bioc', res = 10, path = \".\")\n\n# plot the map of Europe\nplot(world_data,  \n     xlab = \"Longitude\", ylab = \"Latitude\", axes = TRUE, ext=ext_eur)\n\n# add the species occurrences\npoints(occ$lon,occ$lat,cex=.1,col=\"blue\")\n\n# create pseudo-absences\neumask&lt;-crop(bioclim[[1]], ext(ext_eur))\nabsences&lt;-backgroundSample(eumask,nrow(occ),vect(occ),tryf=10)\npoints(absences,cex=.1,col=\"red\")\n\n\n# plot the climate variables in geographic space\nplot(bioclim[[19]],ext=ext_eur)\nplot(bioclim[[3]],ext=ext_eur)\n\n# plot the climate space figure\n# first merge occurences and absences into a single matrix\nallpts &lt;- rbind(cbind(occ$lon,occ$lat,rep(1,nrow(occ))),\n                cbind(absences,rep(0,nrow(absences))))\ncolnames(allpts)[3]&lt;-\"pres\"\n\n# extract the climate variable values for all points\nbioclim_sample&lt;-extract(bioclim,allpts[,1:2])\nallpts_bioclim &lt;- cbind(allpts,bioclim_sample)\n\nallpts_bioclim_plot&lt;-allpts_bioclim\nallpts_bioclim_plot$pres&lt;-as.factor(allpts_bioclim_plot$pres)\nggplot(allpts_bioclim_plot, aes(x=wc2.1_10m_bio_19,y=wc2.1_10m_bio_3,shape=pres, col=pres)) +\n  geom_point(size = 3, alpha=0.5) + scale_color_manual(values = c(\"0\" = \"red\", \"1\" = \"blue\")) \n\n\n\n\n\n\n\n\n\n\n\n\n(a) Geographic space\n\n\n\n\n\n\n\n\n\n\n\n(b) Bioclim 19\n\n\n\n\n\n\n\n\n\n\n\n\n\n(c) Bioclim 13\n\n\n\n\n\n\n\n\n\n\n\n(d) Climate space\n\n\n\n\n\n\n\nFigure 1.7: The geographic space and climate space of Lacerta schreiberi.",
    "crumbs": [
      "Ecology of individuals",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Ecophysiology and the climate space: when to bask in the sun?</span>"
    ]
  },
  {
    "objectID": "ecophysiology.html#statistical-confrontation-regressing-the-climate-space",
    "href": "ecophysiology.html#statistical-confrontation-regressing-the-climate-space",
    "title": "1  Ecophysiology and the climate space: when to bask in the sun?",
    "section": "1.4 Statistical confrontation: regressing the climate space",
    "text": "1.4 Statistical confrontation: regressing the climate space",
    "crumbs": [
      "Ecology of individuals",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Ecophysiology and the climate space: when to bask in the sun?</span>"
    ]
  },
  {
    "objectID": "ecophysiology.html#references",
    "href": "ecophysiology.html#references",
    "title": "1  Ecophysiology and the climate space: when to bask in the sun?",
    "section": "1.5 References",
    "text": "1.5 References\n\n\nGuisan, Antoine, Wilfried Thuiller, and Niklaus E. Zimmermann. 2017.\nHabitat Suitability and Distribution Models: With Applications in\nr. Cambridge University Press.",
    "crumbs": [
      "Ecology of individuals",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Ecophysiology and the climate space: when to bask in the sun?</span>"
    ]
  },
  {
    "objectID": "ecophysiology.html#footnotes",
    "href": "ecophysiology.html#footnotes",
    "title": "1  Ecophysiology and the climate space: when to bask in the sun?",
    "section": "",
    "text": "The concept of equilibrium is very important in ecological theory. It is often introduced in the context of differential equations and corresponds to the point at which the derivative of the variable of interest is zero. The heat equation can also be seen as a differential equation where \\(f\\) corresponds to the derivative of the amount of heat \\(Q\\) in the lizard through time \\(t\\), i.e. \\(dQ/dt\\).↩︎",
    "crumbs": [
      "Ecology of individuals",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Ecophysiology and the climate space: when to bask in the sun?</span>"
    ]
  },
  {
    "objectID": "optimalforaging.html",
    "href": "optimalforaging.html",
    "title": "2  Economic models of behavior: do animals optimize?",
    "section": "",
    "text": "2.1 Searching predator\nThe searching predator is typified as an animal that actively searchs for food. For instance, wolfs roam the landscape constantly searching for their prey. The question is then, any time that a forager comes across a prey whether to spend the time catching and eating it, or continuing to search for another prey, for instance a larger or easier prey item. Joan Roughgarden also liked this type of foraging to the sushi-bar problem where dishes are coming one after the other on a moving tray, and a person needs to decide whether to pick a given dish. This decision is particularly akin to the searching predator situation when one assumes that a person can have only one dish at a time in her or his table, We consider two types of searching predators: time minimizers and energy maximizers.",
    "crumbs": [
      "Ecology of individuals",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Economic models of behavior: do animals optimize?</span>"
    ]
  },
  {
    "objectID": "optimalforaging.html#searching-predator",
    "href": "optimalforaging.html#searching-predator",
    "title": "2  Economic models of behavior: do animals optimize?",
    "section": "",
    "text": "Figure 2.1: A pack of wolf (Canis lupus) roaming around the landscape of Peneda-Gerês National Park, Portugal.\n\n\n\n\n2.1.1 Time minimizer\nMany searching predators are themselves preys to other animals. For instance shrews search for insects to eat, but can be themselves eaten by carnivores or owls. Therefore a reasonable assumption is that they are making foraging decisions that minimize the time foraging. Let’s assume there are two types of prey items, type 1 and 2. These two preys occur at different abundances in the environment, let’s name them \\(a_1\\) and \\(a_2\\). These abundances can be measured as encounter rates from the predator perspective, this is the number of prey items found per unit time. The two types of prey also have different handling times, this is the amount of time required to chase and process the prey, \\(h_1\\) and \\(h_2\\) . We also convention to call the type 1 prey the prey with the lowest handling time, i.e. \\(h_1&lt;h_2\\),\nA searching predator can adopt one of the following three strategies:\n\nStrategy 1: to consume only prey items of type 1\nStrategy 2: to consumer only prey items of type 2\nStrategy 1&2: to consumer both types of prey\n\nIn order to find out which strategy should be adopted by the forager, one needs to calculate the average spent per food item in each of the strategies. For Strategy 1 the average time per item, \\(T_1\\) is the sum of the amount of time the predator needs to encounter a prey with the amount of time that it takes to process that prey. As the abundance is measured in encounter rates, i.e. prey items per unit time, the inverse of that is the waiting time for a prey. Therefore we have for Strategy 1,\n\\[T_1=1/a_1+h_1 \\tag{2.1}\\]\nSimilarly, for Strategy 2, the average time per item \\(T_2\\) is given by\n\\[T_2=1/a_2+h_2.\\]\nA more interesting case is Strategy 3. Here the waiting time is the inverse of the sum of the abundances of both times of prey, while the handling time is average of the handling times of both ypes of prey weighted by their relative abundance,\n\\[\nT_{3}=\\frac{1}{a_1+a_2}+\\frac{a_1 h_1+a_2 h_2}{a_1+a_2}\n\\tag{2.2}\\]\nWe can now define the problem that the forager has to solve as to find the strategy \\(s\\) that minimizes \\(T_s\\):\n\\[\nmin(T_s) \\quad \\text{for} \\quad s=1, 2, 3\n\\]\nIt is easy to demonstrate that Strategy 2 is always worse than Strategy 3, independently of the abundances of the two types of prey. This happens because Strategy 3 always implies a longer waiting time than the two other specialized strategies (i.e. one has to wait less time to find any item of an prey than items of a given prey time, \\(1/(a_1+a_2)&lt;1/a_2\\)) and the handling time of strategy 3 can never be higher than the handling time of strategy 2 (it’s always a value betwen \\(h_1\\) and \\(h_2\\)). So we can exclude Strategy 2 from our analysis. The choice is then between Strategy 1, just taking items of the preferred prey item, and 3, taking items of both types of prey. Let’s assess this two strategies with a little bit of help from R. We start by assuming that the handling time of prey type 1 is 1 second while prey type 2 takes 60 seconds. Let’s also assume that the abundance of prey type 2 is 0.05 individuals per second, i.e. one individuals needs to wait in average 20 seconds to find prey type 2.\n\nh1=1           #Handling time of prey type 1 (s)\nh2=60          #Handling time of prey type 2 (s)\na2=0.05        #abundance of prey type 2 (ind/s)\n\nLet’s now plot the time per item of each of the strategies as a function of the abundance of the preferred prey.\n\na1&lt;-seq(0.005,0.1,0.001)   #abundance of prey time 1 (ind/s)\nt1=1/a1+h1                 #time per item of Strategy 1 (s)\nt3=1/(a1+a2)+h1*a1/(a1+a2)+h2*a2/(a1+a2) #time per item of Strategy 2 (s)\nplot(a1,t1, type=\"l\", col=\"blue\")\nlines(a1,t3, type=\"l\", col=\"red\")\nlegend(\"topright\",                    \n       legend = c(\"Strategy 1\", \"Strategy 3\"),  # Labels\n       col = c(\"red\", \"blue\"),             # Line colors\n       lwd = 2,                            # Line width\n       lty = 1)      \n\n\n\n\n\n\n\n\nThere is a critical threshold of the abundance of prey type 1 above which strategy 1 is preferrable, while below that threshold strategy 3 is the best strategy. Interestingly this threshold does not depend on the abundance of the less preferable prey. For instance, if we assume a low abundance of prey time 2 at 0.01, the resulting plot is:\n\na2 = 0.01\nt1=1/a1+h1                 #time per item of Strategy 1 (s)\nt3=1/(a1+a2)+h1*a1/(a1+a2)+h2*a2/(a1+a2) #time per item of Strategy 2 (s)\nplot(a1,t1, type=\"l\", col=\"blue\")\nlines(a1,t3, type=\"l\", col=\"red\")\n\n\n\n\n\n\n\n\nTo determine this critical threshold one can compare the two vectors, T1 and T3, and find the first position at which T1 becomes smaller than T3,\n\npos=which(t1&lt;t3)[1]\na1[pos]\n\n[1] 0.017\n\n\nSo the critical threshold for these handling times occurs when \\(a_1=0.017\\) individuals per second.\n\n\n2.1.2 Energy per time maximizer\nPerhaps more often, animals try to maximize their energy yield (benefits) while minimizing the time foraging (costs). Or in another way of looking at it, they try to maximize their energy yield per unit time. We already know the time per item associated to each of the three strategies of the searching predator. We now need to calciulate the average energy yield per item. Consider now that the energy content of the prey items are \\(e_1\\) and \\(e_2\\) for prey of type 1 and 2, respectively. We define prey 1 as the preferred type of prey, so we assume that the ratio of the energic content (measured for instance in calories) to the handling time is higher for type 1 prey, i.e. \\(e_1/h_1&gt;e_2/h_2\\). Now we calculate the energy yield per item for each strategy. We start with the energy content of the prey, but need to subtract the energy spent while waiting the prey and the energy spent chasing and processing the prey,\n\\[\nE_1=e_1-ew*tw_1-eh*h_1\n\\tag{2.3}\\]\nwhere \\(ew\\) and \\(eh\\) are the energy spent per unit time while waiting for the prey and the energy spent per unit time while handling, respectively. They can both be measured for instance in cal/s. We already know from the time minimizer that the waiting time for the prey is the inverse of the abundance, \\(tw_1=1/a_1\\). Therefore substituting in Equation 2.3 we have\n\\[\nE_1=e_1-\\frac{ew}{a_1}-eh*h_1.\n\\]\nA similar expression can be written for Strategy 2, replacing 1 with 2 in Equation 2.3. More interesting is to derive the expression for Strategy 3, where the foragers takes both types of prey. The energy content of the prey is the average of the energetic contents of each prey type, weighted by their abundances, \\((e_1*a_1+e_2*a_2)/(a_1+a_2)\\). The waiting time is the inverse of the sums of the abundances of preys of both types, as in Equation 2.2. The handling time is the average of the handling times of each prey type, weighted by their abundances. So we have,\n\\[\nE_3=\\frac{e_1*a_1+e_2*a_2}{a_1+a_2}-\\frac{ew}{a_1+a_2}-eh\\frac{h_1*a_1+h_2*a_2}{a_1+a_2}.\n\\]\n\ne1&lt;-10                       #Caloric content of prey 1\ne2&lt;-100                      #Caloric content of prey 2\nh1&lt;-1                        #Handling time of prey 1\nh2&lt;-60                       #Handling time of prey 2\new&lt;-1                        #Energy spend per unit time while waiting (cal/s)\neh&lt;-1                        #energy spend per unit time handling the prey (cal/s)\n\na1&lt;- seq(0.005,0.5,0.001)    #Abundance of prey 1\na2&lt;-0.05\n\nE1 = e1 -(eh*h1) - ew/a1    #energy per item of Strategy 1 (s)\nE3 = (e1*a1+e2*a2)/(a1+a2)-\n     eh*(h1*a1+h2*a2)/(a1+a2)-ew/(a1+a2) #energy per item of Strategy 3 (s)\n\nT1=1/a1+h1                 #time per item of Strategy 1 (s)\nT3=1/(a1+a2)+h1*a1/(a1+a2)+h2*a2/(a1+a2) #time per item of Strategy 3 (s)\n\nET1 = E1/T1 #energy per time of strategy 1\nET3 = E3/T3 #energy per time of strategy 3\n\nplot(a1,ET1,type=\"l\",xlab=\"Abundance of prey 1\", ylab=\"Energy per time\", col=\"blue\")\nlines(a1,ET3,type=\"l\",col=\"red\")\nlegend(\"topright\",                    \n       legend = c(\"Strategy 1\", \"Strategy 3\"),  # Labels\n       col = c(\"red\", \"blue\"),             # Line colors\n       lwd = 2,                            # Line width\n       lty = 1)",
    "crumbs": [
      "Ecology of individuals",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Economic models of behavior: do animals optimize?</span>"
    ]
  },
  {
    "objectID": "optimalforaging.html#sit-and-wait-predator",
    "href": "optimalforaging.html#sit-and-wait-predator",
    "title": "2  Economic models of behavior: do animals optimize?",
    "section": "2.2 Sit-and-wait predator",
    "text": "2.2 Sit-and-wait predator",
    "crumbs": [
      "Ecology of individuals",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Economic models of behavior: do animals optimize?</span>"
    ]
  },
  {
    "objectID": "modellingbiochange.html",
    "href": "modellingbiochange.html",
    "title": "4  Modelling biodiversity change: winners and losers",
    "section": "",
    "text": "Every minute about 2 football fields of native forest are cleared somewhere in the world. What are the consequences of land-use change for biodiversity?",
    "crumbs": [
      "Ecology of communities",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Modelling biodiversity change: winners and losers</span>"
    ]
  },
  {
    "objectID": "intro_to_R.html",
    "href": "intro_to_R.html",
    "title": "Appendix A — A brief R tutorial",
    "section": "",
    "text": "A.1 Variables, vectors and matrices\n# Introduction to variables\n# Variables can be any sequence of letter and numbers, but \n# it cannot start with a number\nx = 2\nx &lt;- 4\n2+2 \n\n[1] 4\n\ny &lt;- x^5\ny\n\n[1] 1024\n\n# Introduction to vectors\nv1 &lt;- c(2,3,6,12)\nv2 &lt;- 1:100\nlength(v2)\n\n[1] 100\n\nv2\n\n  [1]   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18\n [19]  19  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35  36\n [37]  37  38  39  40  41  42  43  44  45  46  47  48  49  50  51  52  53  54\n [55]  55  56  57  58  59  60  61  62  63  64  65  66  67  68  69  70  71  72\n [73]  73  74  75  76  77  78  79  80  81  82  83  84  85  86  87  88  89  90\n [91]  91  92  93  94  95  96  97  98  99 100\n\nv3 &lt;- seq(1,100,5)  # call without naming arguments\nv3\n\n [1]  1  6 11 16 21 26 31 36 41 46 51 56 61 66 71 76 81 86 91 96\n\nv3 &lt;- seq(from=1,to=100,by=5) # call with names of arguments\nv3\n\n [1]  1  6 11 16 21 26 31 36 41 46 51 56 61 66 71 76 81 86 91 96\n\nv3 &lt;- seq(to=100,by=5) # call skipping the first argument\n#and using the default value 1 - see help(seq)\nv3\n\n [1]  1  6 11 16 21 26 31 36 41 46 51 56 61 66 71 76 81 86 91 96\n\nv3 &lt;- seq(by=5,to=100) # call by arguments and change order or arguments\n\n# Indexing vectors\nv3[3] #uses square brackets to obtain the third element of the vector\n\n[1] 11\n\nv3&gt;20 # produce a vector of boolean values that are TRUE when\n\n [1] FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n[13]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n\n      #v3 is greater than 20\nv3[v3&gt;20] # select from v3 all the values that are greater than 20\n\n [1] 21 26 31 36 41 46 51 56 61 66 71 76 81 86 91 96\n\nv4&lt;-c(1,2,3,4,5)\nv4[c(FALSE,TRUE,FALSE,TRUE,FALSE)] #select from v4 the second and fourth element\n\n[1] 2 4\n\nv3[1:10] # first ten elements\n\n [1]  1  6 11 16 21 26 31 36 41 46\n\nv3[-1] # dropping first element\n\n [1]  6 11 16 21 26 31 36 41 46 51 56 61 66 71 76 81 86 91 96\n\nhead(v2) # prints the first few elements of v2\n\n[1] 1 2 3 4 5 6\n\ntail(v2) # prints the last few elements of v2\n\n[1]  95  96  97  98  99 100\n\nwhich(v3 == 26) # returns the position of v3 that equals 26\n\n[1] 6\n\n#Numerical operations with vectors\n2^v2\n\n  [1] 2.000000e+00 4.000000e+00 8.000000e+00 1.600000e+01 3.200000e+01\n  [6] 6.400000e+01 1.280000e+02 2.560000e+02 5.120000e+02 1.024000e+03\n [11] 2.048000e+03 4.096000e+03 8.192000e+03 1.638400e+04 3.276800e+04\n [16] 6.553600e+04 1.310720e+05 2.621440e+05 5.242880e+05 1.048576e+06\n [21] 2.097152e+06 4.194304e+06 8.388608e+06 1.677722e+07 3.355443e+07\n [26] 6.710886e+07 1.342177e+08 2.684355e+08 5.368709e+08 1.073742e+09\n [31] 2.147484e+09 4.294967e+09 8.589935e+09 1.717987e+10 3.435974e+10\n [36] 6.871948e+10 1.374390e+11 2.748779e+11 5.497558e+11 1.099512e+12\n [41] 2.199023e+12 4.398047e+12 8.796093e+12 1.759219e+13 3.518437e+13\n [46] 7.036874e+13 1.407375e+14 2.814750e+14 5.629500e+14 1.125900e+15\n [51] 2.251800e+15 4.503600e+15 9.007199e+15 1.801440e+16 3.602880e+16\n [56] 7.205759e+16 1.441152e+17 2.882304e+17 5.764608e+17 1.152922e+18\n [61] 2.305843e+18 4.611686e+18 9.223372e+18 1.844674e+19 3.689349e+19\n [66] 7.378698e+19 1.475740e+20 2.951479e+20 5.902958e+20 1.180592e+21\n [71] 2.361183e+21 4.722366e+21 9.444733e+21 1.888947e+22 3.777893e+22\n [76] 7.555786e+22 1.511157e+23 3.022315e+23 6.044629e+23 1.208926e+24\n [81] 2.417852e+24 4.835703e+24 9.671407e+24 1.934281e+25 3.868563e+25\n [86] 7.737125e+25 1.547425e+26 3.094850e+26 6.189700e+26 1.237940e+27\n [91] 2.475880e+27 4.951760e+27 9.903520e+27 1.980704e+28 3.961408e+28\n [96] 7.922816e+28 1.584563e+29 3.169127e+29 6.338253e+29 1.267651e+30\n\nlog(v2)\n\n  [1] 0.0000000 0.6931472 1.0986123 1.3862944 1.6094379 1.7917595 1.9459101\n  [8] 2.0794415 2.1972246 2.3025851 2.3978953 2.4849066 2.5649494 2.6390573\n [15] 2.7080502 2.7725887 2.8332133 2.8903718 2.9444390 2.9957323 3.0445224\n [22] 3.0910425 3.1354942 3.1780538 3.2188758 3.2580965 3.2958369 3.3322045\n [29] 3.3672958 3.4011974 3.4339872 3.4657359 3.4965076 3.5263605 3.5553481\n [36] 3.5835189 3.6109179 3.6375862 3.6635616 3.6888795 3.7135721 3.7376696\n [43] 3.7612001 3.7841896 3.8066625 3.8286414 3.8501476 3.8712010 3.8918203\n [50] 3.9120230 3.9318256 3.9512437 3.9702919 3.9889840 4.0073332 4.0253517\n [57] 4.0430513 4.0604430 4.0775374 4.0943446 4.1108739 4.1271344 4.1431347\n [64] 4.1588831 4.1743873 4.1896547 4.2046926 4.2195077 4.2341065 4.2484952\n [71] 4.2626799 4.2766661 4.2904594 4.3040651 4.3174881 4.3307333 4.3438054\n [78] 4.3567088 4.3694479 4.3820266 4.3944492 4.4067192 4.4188406 4.4308168\n [85] 4.4426513 4.4543473 4.4659081 4.4773368 4.4886364 4.4998097 4.5108595\n [92] 4.5217886 4.5325995 4.5432948 4.5538769 4.5643482 4.5747110 4.5849675\n [99] 4.5951199 4.6051702\n\nv5 &lt;- 101:200\nv5-v2\n\n  [1] 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100\n [19] 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100\n [37] 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100\n [55] 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100\n [73] 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100\n [91] 100 100 100 100 100 100 100 100 100 100\n\nv5/v2\n\n  [1] 101.000000  51.000000  34.333333  26.000000  21.000000  17.666667\n  [7]  15.285714  13.500000  12.111111  11.000000  10.090909   9.333333\n [13]   8.692308   8.142857   7.666667   7.250000   6.882353   6.555556\n [19]   6.263158   6.000000   5.761905   5.545455   5.347826   5.166667\n [25]   5.000000   4.846154   4.703704   4.571429   4.448276   4.333333\n [31]   4.225806   4.125000   4.030303   3.941176   3.857143   3.777778\n [37]   3.702703   3.631579   3.564103   3.500000   3.439024   3.380952\n [43]   3.325581   3.272727   3.222222   3.173913   3.127660   3.083333\n [49]   3.040816   3.000000   2.960784   2.923077   2.886792   2.851852\n [55]   2.818182   2.785714   2.754386   2.724138   2.694915   2.666667\n [61]   2.639344   2.612903   2.587302   2.562500   2.538462   2.515152\n [67]   2.492537   2.470588   2.449275   2.428571   2.408451   2.388889\n [73]   2.369863   2.351351   2.333333   2.315789   2.298701   2.282051\n [79]   2.265823   2.250000   2.234568   2.219512   2.204819   2.190476\n [85]   2.176471   2.162791   2.149425   2.136364   2.123596   2.111111\n [91]   2.098901   2.086957   2.075269   2.063830   2.052632   2.041667\n [97]   2.030928   2.020408   2.010101   2.000000\n\nv1/v2\n\n  [1] 2.00000000 1.50000000 2.00000000 3.00000000 0.40000000 0.50000000\n  [7] 0.85714286 1.50000000 0.22222222 0.30000000 0.54545455 1.00000000\n [13] 0.15384615 0.21428571 0.40000000 0.75000000 0.11764706 0.16666667\n [19] 0.31578947 0.60000000 0.09523810 0.13636364 0.26086957 0.50000000\n [25] 0.08000000 0.11538462 0.22222222 0.42857143 0.06896552 0.10000000\n [31] 0.19354839 0.37500000 0.06060606 0.08823529 0.17142857 0.33333333\n [37] 0.05405405 0.07894737 0.15384615 0.30000000 0.04878049 0.07142857\n [43] 0.13953488 0.27272727 0.04444444 0.06521739 0.12765957 0.25000000\n [49] 0.04081633 0.06000000 0.11764706 0.23076923 0.03773585 0.05555556\n [55] 0.10909091 0.21428571 0.03508772 0.05172414 0.10169492 0.20000000\n [61] 0.03278689 0.04838710 0.09523810 0.18750000 0.03076923 0.04545455\n [67] 0.08955224 0.17647059 0.02898551 0.04285714 0.08450704 0.16666667\n [73] 0.02739726 0.04054054 0.08000000 0.15789474 0.02597403 0.03846154\n [79] 0.07594937 0.15000000 0.02469136 0.03658537 0.07228916 0.14285714\n [85] 0.02352941 0.03488372 0.06896552 0.13636364 0.02247191 0.03333333\n [91] 0.06593407 0.13043478 0.02150538 0.03191489 0.06315789 0.12500000\n [97] 0.02061856 0.03061224 0.06060606 0.12000000\n\n#Using strings in R\nmystring &lt;- \"Ecology\"\nvstrg &lt;- c(\"Anna\", \"Peter\", \"Xavier\")\nvstrg[2]\n\n[1] \"Peter\"\n\n#making plots in R\nplot(v2,v2)\n\n\n\n\n\n\n\nplot(v2,v2^2)\n\n\n\n\n\n\n\nplot(v2,v2^2,type=\"l\")\n\n\n\n\n\n\n\nplot(v2,v2^2,type=\"l\",col=\"red\")\n\n\n\n\n\n\n\nplot(v2,v2^2,type=\"l\",col=\"red\",main=\"My beautiful plot\")\n\n\n\n\n\n\n\nplot(v2,v2^2,type=\"l\",col=\"red\",main=\"My beautiful plot\",xlab=\"x\",\n     ylab=\"x^2\")\nlines(v2,v2^3,col=\"blue\")\n\n\n\n\n\n\n\n# Matrices in R\nm &lt;- matrix(5,3,2)\nm\n\n     [,1] [,2]\n[1,]    5    5\n[2,]    5    5\n[3,]    5    5\n\nm2 &lt;- matrix(1:6,3,2)\nm2\n\n     [,1] [,2]\n[1,]    1    4\n[2,]    2    5\n[3,]    3    6\n\nt(m2) # transposes matrix\n\n     [,1] [,2] [,3]\n[1,]    1    2    3\n[2,]    4    5    6\n\nx &lt;- 1:4\ny &lt;- 5:8\n\nm3&lt;-cbind(x,y)\nm3\n\n     x y\n[1,] 1 5\n[2,] 2 6\n[3,] 3 7\n[4,] 4 8\n\nm4&lt;-rbind(x,y)\nm4\n\n  [,1] [,2] [,3] [,4]\nx    1    2    3    4\ny    5    6    7    8\n\n# Indexing matrices\nm3[3,2] #element in row 3 and column 2\n\ny \n7 \n\nm3[1,] #entire first row\n\nx y \n1 5 \n\nm3[,1] #entire first column\n\n[1] 1 2 3 4\n\ncolnames(m3)&lt;-c(\"col1\",\"col2\")\nm3\n\n     col1 col2\n[1,]    1    5\n[2,]    2    6\n[3,]    3    7\n[4,]    4    8\n\nm3[,\"col2\"]\n\n[1] 5 6 7 8\n\n# Lists in R\nmylist &lt;- list(elem1=m,elem2=v2,elem3=\"my list\")\nmylist$elem2\n\n  [1]   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18\n [19]  19  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35  36\n [37]  37  38  39  40  41  42  43  44  45  46  47  48  49  50  51  52  53  54\n [55]  55  56  57  58  59  60  61  62  63  64  65  66  67  68  69  70  71  72\n [73]  73  74  75  76  77  78  79  80  81  82  83  84  85  86  87  88  89  90\n [91]  91  92  93  94  95  96  97  98  99 100\n\n# Dataframes\ndf &lt;- as.data.frame(m3)\ndf$col1\n\n[1] 1 2 3 4",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>A</span>  <span class='chapter-title'>A brief R tutorial</span>"
    ]
  },
  {
    "objectID": "intro_to_R.html#iterations-and-conditional-expressions",
    "href": "intro_to_R.html#iterations-and-conditional-expressions",
    "title": "Appendix A — A brief R tutorial",
    "section": "A.2 Iterations and conditional expressions",
    "text": "A.2 Iterations and conditional expressions\n\n# FOR loops\n\nfor (k in 1:10)  # for k =1, 2, 3, 4, 5,...10\n  print (k^2)   #do this\n\n[1] 1\n[1] 4\n[1] 9\n[1] 16\n[1] 25\n[1] 36\n[1] 49\n[1] 64\n[1] 81\n[1] 100\n\nR &lt;- 1.2\nn &lt;- 1\nprint(n[1])\n\n[1] 1\n\nfor (t in 1:100)\n{\n  n[t+1] &lt;- R*n[t]\n  print(n[t+1])\n}\n\n[1] 1.2\n[1] 1.44\n[1] 1.728\n[1] 2.0736\n[1] 2.48832\n[1] 2.985984\n[1] 3.583181\n[1] 4.299817\n[1] 5.15978\n[1] 6.191736\n[1] 7.430084\n[1] 8.9161\n[1] 10.69932\n[1] 12.83918\n[1] 15.40702\n[1] 18.48843\n[1] 22.18611\n[1] 26.62333\n[1] 31.948\n[1] 38.3376\n[1] 46.00512\n[1] 55.20614\n[1] 66.24737\n[1] 79.49685\n[1] 95.39622\n[1] 114.4755\n[1] 137.3706\n[1] 164.8447\n[1] 197.8136\n[1] 237.3763\n[1] 284.8516\n[1] 341.8219\n[1] 410.1863\n[1] 492.2235\n[1] 590.6682\n[1] 708.8019\n[1] 850.5622\n[1] 1020.675\n[1] 1224.81\n[1] 1469.772\n[1] 1763.726\n[1] 2116.471\n[1] 2539.765\n[1] 3047.718\n[1] 3657.262\n[1] 4388.714\n[1] 5266.457\n[1] 6319.749\n[1] 7583.698\n[1] 9100.438\n[1] 10920.53\n[1] 13104.63\n[1] 15725.56\n[1] 18870.67\n[1] 22644.8\n[1] 27173.76\n[1] 32608.52\n[1] 39130.22\n[1] 46956.26\n[1] 56347.51\n[1] 67617.02\n[1] 81140.42\n[1] 97368.5\n[1] 116842.2\n[1] 140210.6\n[1] 168252.8\n[1] 201903.3\n[1] 242284\n[1] 290740.8\n[1] 348889\n[1] 418666.7\n[1] 502400.1\n[1] 602880.1\n[1] 723456.1\n[1] 868147.4\n[1] 1041777\n[1] 1250132\n[1] 1500159\n[1] 1800190\n[1] 2160228\n[1] 2592274\n[1] 3110729\n[1] 3732875\n[1] 4479450\n[1] 5375340\n[1] 6450408\n[1] 7740489\n[1] 9288587\n[1] 11146304\n[1] 13375565\n[1] 16050678\n[1] 19260814\n[1] 23112977\n[1] 27735572\n[1] 33282687\n[1] 39939224\n[1] 47927069\n[1] 57512482\n[1] 69014979\n[1] 82817975\n\nR &lt;- 1.2\nn &lt;- 1\nfor (t in 1:100)\n  n[t+1] &lt;- R*n[t]\n\n# IF conditional statement\n\n# logical operators\n# == equal to\n# &gt; greater than\n# &lt; smaller than\n# &gt;= greater or equal\n# &lt;= smaller or equal\n# != different from\n# && and\n# || or\n\nif (3&gt;2) print (\"yes\")\n\n[1] \"yes\"\n\nif (3==2) print (\"yes\") else print(\"no\")\n\n[1] \"no\"\n\nif ((3&gt;2)&&(4&gt;5)) print (\"yes\")\n\nfor (k in 1:10)  # for k =1, 2, 3, 4, 5,...10\n  if (k^2&gt;20) print (k^2)  \n\n[1] 25\n[1] 36\n[1] 49\n[1] 64\n[1] 81\n[1] 100",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>A</span>  <span class='chapter-title'>A brief R tutorial</span>"
    ]
  },
  {
    "objectID": "intro_to_R.html#writing-functions",
    "href": "intro_to_R.html#writing-functions",
    "title": "Appendix A — A brief R tutorial",
    "section": "A.3 Writing functions",
    "text": "A.3 Writing functions\n\n# creating FUNCTIONS in r\n\npythagoras &lt;- function (c1,c2)\n{\n  h &lt;- sqrt (c1^2 + c2^2)\n  return (h)\n}\n\npythagoras(1,1)\n\n[1] 1.414214\n\npythagoras(5,5)\n\n[1] 7.071068\n\npythagoras(10,1)\n\n[1] 10.04988\n\n# regression in R\n\nhelp(lm)\nx &lt;- c(1,2,3,4)\ny &lt;- c(1.1,2.3,2.9,4.1)\nplot(x,y)\nmyreg&lt;-lm(y ~ x)\nsummary(myreg)\n\n\nCall:\nlm(formula = y ~ x)\n\nResiduals:\n    1     2     3     4 \n-0.06  0.18 -0.18  0.06 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)   \n(Intercept)  0.20000    0.23238   0.861  0.48012   \nx            0.96000    0.08485  11.314  0.00772 **\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.1897 on 2 degrees of freedom\nMultiple R-squared:  0.9846,    Adjusted R-squared:  0.9769 \nF-statistic:   128 on 1 and 2 DF,  p-value: 0.007722\n\nabline(myreg)",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>A</span>  <span class='chapter-title'>A brief R tutorial</span>"
    ]
  },
  {
    "objectID": "intro_to_R.html#random-numbers-and-statistical-distributions",
    "href": "intro_to_R.html#random-numbers-and-statistical-distributions",
    "title": "Appendix A — A brief R tutorial",
    "section": "A.4 Random numbers and statistical distributions",
    "text": "A.4 Random numbers and statistical distributions\n\nrandom1d&lt;-function(tmax)\n{\nx&lt;-0\nfor (t in 1:tmax)\n{\n  r&lt;-runif(1)\n  if (r&lt;1/2)\n    x[t+1]&lt;-x[t]+1 else\n      x[t+1]&lt;-x[t]-1\n}\nreturn(x)\n}\n\nplot(random1d(100))\n\n\n\n\n\n\n\ntmax&lt;-10000\nlastx&lt;-0\nfor (i in 1:1000)\n{\n  x&lt;-random1d(tmax)\n  lastx[i]&lt;-x[tmax]\n}\n\nhist(lastx)\n\n\n\n\n\n\n\nmean(lastx)\n\n[1] -1.504\n\nd&lt;-sqrt(lastx^2)\nhist(d)\n\n\n\n\n\n\n\nmean(d)\n\n[1] 78.604\n\nmedian(d)\n\n[1] 67\n\nmax(d)\n\n[1] 301\n\nhist(d[d&lt;20],breaks=c(1:20))",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>A</span>  <span class='chapter-title'>A brief R tutorial</span>"
    ]
  },
  {
    "objectID": "intro_to_R.html#spatial-analysis",
    "href": "intro_to_R.html#spatial-analysis",
    "title": "Appendix A — A brief R tutorial",
    "section": "A.5 Spatial analysis",
    "text": "A.5 Spatial analysis\n\nA.5.1 Shapefiles and Raster (Isabel Rosa)\nWhen you work with spatial data, essentially you use two types of data:\n\nvector data (i.e., shapefiles): stores the geometric location and attribute information of geographic features. These can be represented by points, lines, or polygons (areas).\nmatricial data (i.e., raster): consists of a matrix of cells (or pixels) organized into rows and columns (or a grid) where each cell contains a value representing information. They can be categorical or continuous and have multiple bands.\n\nFor more information on the tree cover datasets, please see: https://earthenginepartners.appspot.com/science-2013-global-forest/download_v1.2.html\n\n# read in shapefile using rgdal\nsc &lt;- readOGR(\".\", \"SantaCatarina\")\n\n# import municipalities and settlements shapefiles\nsc_mun &lt;- readOGR(\".\", \"SantaCatarina_mun\")\nbr_sett &lt;- readOGR(\".\", \"Brazil_settlements\")\n\n# always good to check the contents of your dat\n#str(br_sett)\n\n# visualize one of the variables\nspplot(sc_mun, z=\"Shape_Area\", main = \"Municipality Area (km2)\")\n\n# read in raster\ntc&lt;-raster(\"tree_cover.tif\")\n\n# import loss and gain rasters here\ntl&lt;-raster(\"loss.tif\")\ntg&lt;-raster(\"gain.tif\")\n\n# for multiple band rasters, you can choose to import just one or all bands\n#r2 &lt;- raster(\"tree_cover_multi.tif\", band=2)\n\n# note that the value 255, which is Hansen's nodata value was not recognized as such\nNAvalue(tg) # check first\nNAvalue(tc)&lt;-255 #fix it by forcing 255 to be the nodata\nNAvalue(tl)&lt;-255 #fix it by forcing 255 to be the nodata\nNAvalue(tg)&lt;-255 #fix it by forcing 255 to be the nodata\n\n# visualize one of the rasters\npar(mfrow=c(1,3))\nplot(tc, main = \"Tree Cover (%)\")\nplot(tl, main = \"Tree Cover Loss (binary)\")\nplot(tg, main = \"Tree Cover Gain (binary)\")\n\n\n\nA.5.2 Reference systems\nCoordinate systems are essential to understand when working with spatial data. Some reading material on this can be found here: Essentially, if one wants to know which position of the Earth we refer to, coordinates of geospatial data require a reference system:\n\ngeodesic/geographic coordinates need an order (lat/long), a unit (e.g., degrees) and a datum (a reference ellipsoid: e.g. WGS84)\ncartesian/projected coordinates (e.g. UTM, web Mercator) need also measurement units (e.g., meters), and some way of encoding how they relate to geodesic coordinates, in which datum (this is handled by the GIS system)\n\n\n\nA.5.3 Operations with Shapefiles\nClip: in R you can clip using the command “intersect”, so that intersect(feature to be clipped, clip feature) Select: you can use a boolean selection to subset the features of your shapefile, for instance if you just want to look at settlements with a mininum number of habitants, so that Population &gt; median(Population) There are several options, have a look at this great tutorial: http://www.rspatial.org/spatial/rst/7-vectmanip.html\n\n# Clip the settlement features using the Santa Catarina shapefile\nsc_sett&lt;-intersect(br_sett, sc)\n\n#sc_sett$med &lt;- sc_sett$population &gt; median(sc_sett$population) # oops! annoyingly our population values have been stored as factors\n\n# convert to original numerical values\nsc_sett$population&lt;-as.numeric(as.vector(sc_sett$population))\n# careful! applying as.numeric alone it will not work!!\n\n# visualize results\nplot(sc_sett, main = \"Settlements in Santa Catarina\")\nspplot(sc_sett, z=\"population\", main = \"Population per Settlement (people)\")\n\n# select settlements larger then the median value\nsc_sett$med &lt;- sc_sett$population &gt; median(sc_sett$population)\nsc_largesett &lt;- sc_sett[sc_sett$med == 1, ]\n\n# visualize results\npar(mfrow=c(1,2))\nplot(sc_sett, main = \"All Settlements\")\nplot(sc_largesett, main = \"Largest Settlements\")\n\n\n\nA.5.4 Operations with Rasters\nThere are many operations you can do with rasters, and these are more frequently used in spatial analyses than shapefiles. Here I will just illustrate a couple of simple operations: - Global/Raster statistics - obtain a value that summarizes the whole raster layer - Cell statistics (pixel-by-pixel operation): obtains a value per pixel - Focal statistics (operation that takes into account neighborhood of central cell) - results in raster of same of different size - Zonal statistics - calculates summary statistics of a give raster (e.g., elevation) based on pre-defined zones (e.g., admnistrative boundaries, biomes). Outputs a table with the values per zone. For more great examples, have a look here: http://www.rspatial.org/spatial/rst/8-rastermanip.html\n\n# sum the loss and gain rasters to know where there was simultaneous loss and gain in Santa Catarina\ntclg&lt;-tl+tg \npar(mfrow=c(1,3))\nplot(tl, main = \"Forest Loss\")\nplot(tg, main = \"Forest Gain\")\nplot(tclg, main = \"Forest Loss and Gain\")\n\n# you can also try to create three new rasters and work with them\n# create a new raster\nr &lt;- raster(ncol=10, nrow=10, xmx=-80, xmn=-150, ymn=20, ymx=60)\nvalues(r) &lt;- runif(ncell(r)) # assign random values\n#plot(r)\n\n# create two more rasters based on the first one\nr2 &lt;- r * r\nr3  &lt;- sqrt(r)\n\n# either stack or brick them\ns &lt;- stack(r, r2, r3)\n#b &lt;- brick(s)\n\n# Raster statistics - calculate several statistics per raster layer (i.e., sum, mean, median)\ncellStats(s, \"sum\") # outputs a value per raster\n\n# Cell statistics - calculate several statistics per pixel  (i.e., sum, mean, median)\npar(mfrow=c(2,2))\nplot(r, main =\"Random 1\")\nplot(r2, main =\"Random 2\")\nplot(r3, main =\"Random 3\")\nplot(overlay(s, fun=\"mean\"), main=\"Average Values\") # outputs a new raster\n\n# Focal statistics - calculate mean accounting for the neighborhood values, compare with previous outcome \nf1 &lt;- focal(tc, w=matrix(1,nrow=5,ncol=5) , fun=mean)\nplot(f1, main = \"Average forest cover 5x5\")\n# sum the loss, vary window size\nf2 &lt;- focal(tl, w=matrix(1,nrow=5,ncol=5) , fun=sum)\nplot(f2, main = \"Total forest loss 5x5\")\n# sum the gain, vary window size\nf3 &lt;- focal(tg, w=matrix(1,nrow=5,ncol=5) , fun=sum)\nplot(f3, main = \"Total forest gain 5x5\")\n\n# plot 4 maps with different window sizes\npar(mfrow=c(2,2))\nfor(i in c(5,15,25,55)){\n  f_w &lt;- focal(tc, w=matrix(1,nrow=i,ncol=i) , fun=sum)\n  plot(f_w, main = paste0(\"Window size: \", i))\n}\n\n# Zonal Statistics - using two rasters\nsc_tc_mean_loss &lt;- zonal(tc, tl, fun=mean) #average tree cover in loss areas\nsc_tc_mean_gain &lt;- zonal(tc, tg, fun=mean) #average tree cover in gain areas\n\n# average tree cover loss\nsc_tc_mean_loss\n\n# average tree cover gain\nsc_tc_mean_gain\n\n\n\nA.5.5 Operations with both Rasters and Shapefiles\nHere I’ll show a couple of examples of operation that use feature data as inputs and output rasters: Distance to features - calculates the euclidean distance from each cell/pixel to the closest feature (e.g., roads, settlements). Outputs a raster file with these distances. Interpolation: a world in itself! Very vey short example provided here (based on a single method, IDW), please see more here: http://www.rspatial.org/analysis/rst/4-interpolation.html To better understand interpolation I advise you to read first about spatial autocorrelation: http://www.rspatial.org/analysis/rst/3-spauto.html\nTo use interpolation metrics you need to load another packaged called gstat Inverse distance weighted (IDW) - See more also here: http://desktop.arcgis.com/en/arcmap/10.3/tools/3d-analyst-toolbox/how-idw-works.htm\n\n# create an empty raster (little trick using existing raster)\ndist_sett&lt;-tc*0\n# or you can create an empty one like before\n# dist_sett &lt;- raster(ncol=ncol(tc), nrow=nrow(tc), xmx=extent(tc)@xmax, xmn=extent(tc)@xmin, ymn=extent(tc)@ymin, ymx=extent(tc)@ymax)\n\n# Distance to points\ndist_sett &lt;- distanceFromPoints(dist_sett, sc_sett)\n\n# you can then mask the outside area of Santa Catarina\ndist_sett &lt;- mask(dist_sett, tc)\n\n# plot results\nplot(dist_sett, main = \"Distance to settlements (m)\")\n\n# load gstat\nlibrary(gstat)\nidw_sett&lt;-tc*0\n\n# compute the model, see reference for more detail\ngs &lt;- gstat(formula=population~1, locations=sc_sett, nmax=5, set=list(idp = 2))\nidw_out &lt;- interpolate(idw_sett, gs)\n\n## [inverse distance weighted interpolation]\nsc_pop &lt;- mask(idw_out, tc)\nplot(sc_pop, main = \"Santa Catarina Population\")\n\n\n\nA.5.6 Export Shapefiles and Rasters\nIt’s very easy to export both shapefiles and rasters from R to be visualized in QGIS or ArcMap.\n\n# Save feature layers (point, polygon, polyline) to shapefile \nwriteOGR(sc_largesett, dsn=\".\", layer=\"SC_largeSett\", driver=\"ESRI Shapefile\" )\n\n# or \n#shapefile(sc_largesett, \"SC_largeSett.shp\", overwrite=TRUE) \n\n#Exporting raster\nwriteRaster(sc_pop, filename=\"SC_popmap\", format=\"GTiff\" )",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>A</span>  <span class='chapter-title'>A brief R tutorial</span>"
    ]
  },
  {
    "objectID": "intro_to_R.html#working-with-biodiversity-data-gbif-ebv-portal-corey-callaghan-luise-quossfirst-we-load-the-library-rgbif.",
    "href": "intro_to_R.html#working-with-biodiversity-data-gbif-ebv-portal-corey-callaghan-luise-quossfirst-we-load-the-library-rgbif.",
    "title": "Appendix A — A brief R tutorial",
    "section": "A.6 Working with biodiversity data: GBIF, EBV Portal (Corey Callaghan, Luise Quoss)First we load the library rgbif.",
    "text": "A.6 Working with biodiversity data: GBIF, EBV Portal (Corey Callaghan, Luise Quoss)First we load the library rgbif.\n\nlibrary(rgbif)\nlibrary(tidyverse)\n\nNow we will download observations of a species. Let’s download observations of the common toad “Bufo bufo”.\n\nmatbufobufo&lt;-occ_search(scientificName=\"Bufo bufo\", limit=500, hasCoordinate = TRUE, hasGeospatialIssue = FALSE)\n\nLet’s examine the object matbufobufo\n\nclass(matbufobufo)\nmatbufobufo\n\nLet’s download data about octupusses. They are in the order “Octopoda”. First we need to find the GBIF search key for Octopoda.\n\na&lt;-name_suggest(q=\"Octopoda\",rank=\"Order\")\nkey&lt;-a$data$key\n\n\noctopusses&lt;-occ_search(orderKey=key,limit=2000, hasCoordinate = TRUE, hasGeospatialIssue = FALSE)\n\nShow the result\n\noctmat&lt;-octopusses$data\nhead(octmat)\n\nCount the number of observations per species using tidyverse and pipes\n\n#class(octmat)\noctmat %&gt;% \n  group_by(scientificName) %&gt;% \n  summarise(sample_size=n()) %&gt;%\n  arrange(desc(sample_size)) %&gt;% \n  mutate(sample_size_log=log(sample_size,2)) %&gt;% \n  ggplot(aes(x = sample_size_log)) + geom_histogram() \n\nPlot the records on an interactive map. First load the leaflet package.\n\nlibrary(leaflet)\nleaflet(data=octmat) %&gt;% addTiles() %&gt;%\n  addCircleMarkers(lat= ~decimalLatitude, lng = ~decimalLongitude,popup=~scientificName)\n\n\nA.6.1 Version 2 (Isabel Rosa)\nHere are the packages we’ll need.\n\nlibrary(rgbif)\nlibrary(tidyverse)\nlibrary(raster)\nlibrary(maps)\nlibrary(leaflet)\nlibrary(sdmpredictors)\n\nFirst let’s pick an example species to download data for. We will only download 500 observations to keep it simple for now. If you were doing this for real, you would download all data for that species (see notes at the end). I will choose the European Robin: https://en.wikipedia.org/wiki/European_robin.\n\nspecies &lt;- occ_search(scientificName=\"Erithacus rubecula\", limit=500, hasCoordinate = TRUE, hasGeospatialIssue=FALSE)\n\nWhat does this object look like?\n\nclass(species)\n\nspecies\n\nIt is a special object of class gbif which allows for the metadata and the actual data to all be included, as well as taxonomic hierarchy data, and media metadata. We won’t worry too much about the details of this object now. But we do want to get a dataframe we can work with! To do this, we have one extra step.\n\nsp_dat &lt;- species$data\n\nclass(sp_dat)\n\nhead(sp_dat)\n\nSo this was just for one species. Lets broaden this out a little bit. What if we were interested in many species of a given order/class? Here, we will choose an entire order to download. I will choose owls! https://en.wikipedia.org/wiki/Owl. First, we need to find the ‘key’ that gbif uses for that order and then pass it to our GBIF download function. Again, we are only getting a small number of records for illustration purposes.\n\na &lt;- name_suggest(q='Strigiformes')\n\nkey &lt;- a$data$key\n\norder &lt;- occ_search(orderKey=key, limit=1000, hasCoordinate = TRUE, hasGeospatialIssue=FALSE) \n\nWhat kind of object is ‘order’? As with species, we need to turn it into a dataframe to work with.\n\norder_dat &lt;- order$data\n\nclass(order_dat)\n\nhead(order_dat)\n\nCount the number of observations by species\n\norder_dat %&gt;%\n  group_by(scientificName) %&gt;%\n  summarize(sample_size=n()) %&gt;%\n  arrange(desc(sample_size))\n\nPlot the records on an interactive map. First for our chosen species.\n\nleaflet(data = sp_dat) %&gt;%\n    addTiles() %&gt;%\n    addCircleMarkers(lat = ~decimalLatitude, lng = ~decimalLongitude,popup = ~scientificName)\n\nThen for the order we chose.\n\nleaflet(data = order_dat) %&gt;%\n    addTiles() %&gt;%\n    addCircleMarkers(lat = ~decimalLatitude, lng = ~decimalLongitude, popup = ~scientificName)",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>A</span>  <span class='chapter-title'>A brief R tutorial</span>"
    ]
  },
  {
    "objectID": "intro_to_R.html#climate-data",
    "href": "intro_to_R.html#climate-data",
    "title": "Appendix A — A brief R tutorial",
    "section": "A.7 Climate data",
    "text": "A.7 Climate data\nLet’s play with some global climate data and overlay that with our GBIF observations.\n\nmean_temp_map &lt;- getData(name=\"worldclim\", res=10, var=\"tmean\")\nplot(mean_temp_map)\n\nEach month has separate values for each cell. To combine to a yearly value, we just take the mean.\n\nannual_mean_temp &lt;- mean(mean_temp_map)/10 #data comes as degrees * 10\n\nNow plot this.\n\nplot(annual_mean_temp)\n\nTo get out the values for the organism of interest, we use extract.\n\norg_temp &lt;- extract(annual_mean_temp, cbind(x=sp_dat$decimalLongitude, y=sp_dat$decimalLatitude))\n\nNow we will visualize how the global distribution of temperature values compares with the species’ distribution of temperature values. This shows the distribution of temps where robins are found versus the global distribution of temps.\n\ntemp &lt;- tibble(mean_temp=getValues(annual_mean_temp)) %&gt;%\n  filter(!is.na(mean_temp))\n\ntemp_org &lt;- tibble(organism_temp=org_temp) %&gt;%\n  filter(!is.na(organism_temp))\n\nggplot(temp, aes(x=mean_temp))+\n  geom_density(fill=\"blue\")+\n  geom_density(data=temp_org, aes(x=organism_temp), fill=\"red\")+\n  theme_bw()",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>A</span>  <span class='chapter-title'>A brief R tutorial</span>"
    ]
  },
  {
    "objectID": "intro_to_R.html#intro-to-apply-pipes-ggplot2-tidyverse.",
    "href": "intro_to_R.html#intro-to-apply-pipes-ggplot2-tidyverse.",
    "title": "Appendix A — A brief R tutorial",
    "section": "A.8 Intro to apply, pipes, ggplot2, tidyverse.",
    "text": "A.8 Intro to apply, pipes, ggplot2, tidyverse.\n\nA.8.1 Introduction to gpplot\n\ncars\nlibrary(ggplot2)\n\nggplot(data=cars, mapping=aes(x=speed,y=dist)) + geom_point(colour=\"red\")\n\n\nplot(cars$speed,cars$dist)\n\n\n#Introduction to R - 9\n\n\n# a recursive function that calculates a factorial\nmyfun &lt;- function(x)\n{\n  if (x==1)\n    return (1)\n  else return(x*myfun(x-1))\n}\n\nmyfun(1:10) # does not work\n\n#option1 - with a for loop\nstart_time &lt;- Sys.time()\ny&lt;-0\nfor (i in 1:100)\n  y[i]&lt;-myfun(i)\nend_time &lt;- Sys.time()\nend_time-start_time\ny\nplot(y,type=\"l\")\n\n#option 2 - with apply\nstart_time &lt;- Sys.time()\ny&lt;-sapply(1:100,myfun)\nend_time &lt;- Sys.time()\nend_time-start_time\ny\n\n# selecting a subset from a matrix and applying a function to a column of that subset\n\nsetwd(\"~/iDiv Dropbox/Henrique Pereira/Teaching/Spatial Ecology/Spatial Ecology 2022/2_Lab_assignments\")\nFlorida &lt;- read.csv(\"Florida.csv\")\n\n# number of species for year 1970 and route 20\ntapply(Florida$Abundance,Florida$Route==20 & Florida$Year==1970, length)\n\n# matrix with number of species per route and per year\nout&lt;-tapply(Florida$Abundance,list(Florida$Route,Florida$Year), length)\n\nnames(out[,1])\nplot(out[10,])\nplot(out[20,])\n\n\nshannon&lt;-function(x)\n{\n  p&lt;-x/sum(x)\n  - sum(p*log(p))\n}\n\nout&lt;-tapply(Florida$Abundance,list(Florida$Route,Florida$Year), shannon)\nplot(out[10,])\n\nlibrary(tidyverse)\n\n#our first pipe\nx&lt;-rnorm(1000)\nhist(x)\n\nrnorm(1000) %&gt;%  hist\n\nt&lt;-1:ncol(out)\nmyreg&lt;-lm(out[10,]~t)\nsummary(myreg)\nplot(out[10,])\nabline(myreg)\n\nlm(out[10,]~t) %&gt;% summary \nplot(out[10,])\nlm(out[10,]~t) %&gt;% abline \n\n#ggplot\nmat=cbind(t,out[10,])\ndata(cars)\ncolnames(mat)&lt;-c(\"time\",\"shannon\")\nmat&lt;-as.data.frame(mat)\n\nmyplot &lt;-  ggplot(mat, aes(time,shannon))+\n  geom_point()\nmyplot\n\nmyplot &lt;-  ggplot(mat, aes(time,shannon))+\n  geom_line()\nmyplot\n\ndata(cars)\nmyplot &lt;-  ggplot(cars, aes(speed,dist))+\n  geom_point()+geom_line()\nmyplot\n\ndata(cars)\nmyplot &lt;-  ggplot(cars, aes(speed,dist))+\n  geom_point()+geom_smooth(method=\"lm\")\nmyplot\n\ndata(cars)\nmyplot &lt;-  ggplot(cars, aes(speed,dist))+\n  geom_point()+geom_smooth(method=\"lm\")+scale_x_log10()+scale_y_log10()\nmyplot",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>A</span>  <span class='chapter-title'>A brief R tutorial</span>"
    ]
  },
  {
    "objectID": "labs.html",
    "href": "labs.html",
    "title": "Appendix B — Computational labs",
    "section": "",
    "text": "B.1 Climate space of an ectotherm\nSolar radiation and convection are the two main pathways for animals such as small lizards. In this case, the total heat flux (f) into the animal is given by the heat flux equation:\n\\[f = q\\ –h*(b - a)\\]\nStart by reading the Section C.1. The tutorial has a data frame containing data on individuals A. cristatellus living in urban and forested areas in three cities in Puerto Rico, giving us the perfect opportunity to assess the potential thermal effects of habitat upon this species. To do this:\nHint: to filter the data you can use the subset function in R\n# example filtering data from anoles only from San Jose sites\ndf_sanjose &lt;- subset(df, Site == \"San Jose\")",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>B</span>  <span class='chapter-title'>Computational labs</span>"
    ]
  },
  {
    "objectID": "labs.html#climate-space-of-an-ectotherm",
    "href": "labs.html#climate-space-of-an-ectotherm",
    "title": "Appendix B — Computational labs",
    "section": "",
    "text": "\\(q\\) = solar radiation (cal/h)\n\\(h*(b - a)\\) = heat loss through convection\n\\(b\\) = body temperature of the animal (ºC)\n\\(a\\) = air temperature (ºC)\n\\(h\\) = convection heat transfer coefficient (cal/h/ ºC)\n\n\nEquilibrium body temperature\n\nAssuming that air temperature is 18ºC, and h = 50 cal/h, plot the lizard’s equilibrium body temperature as a function of solar radiation. Assume that solar radiation varies between 0 and 1500 cal/h\n\nClimate space of a Lizard\n\nDraw the climate space of the lizard by drawing the polygon that is limited by the minimum and maximum temperatures that the lizard can support, as a function of solar radiation. Consider that the upper lethal limit for the body temperature (bmax) is 36ºC and the lower lethal limit for the body temperature (bmin) is 24ºC.\nHint: polygon - draws the polygons whose vertices are given in x and y.\n\nAir Temperature and solar radiation throughout the day in two locations\n\nPlot the following values of air temperature and solar radiation that are available throughout a day in two locations. For:\n\nTimes of the day\nt = c(\"00:00\",\"03:00\",\"06:00\",\"09:00\",\"12:00\",\n  \"15:00\",\"18:00\",\"21:00\",\"00:00\")\nSolar radiation in the rock habitat\nrock_q = c(150,150,800,1100,1300,1200,800,400,150)\nAir temperature in the rock habitat\nrock_a = c(18,13,10,14,21,24,22,20,18)\nSolar radiation in the bush habitat\nbush_q = c(150,150,450,600,650,650,350,200,150)\nAir temperature in the bush habitat\nbush_a = c(18,13,10,14,21,24,22,20,18)\n\nAt which time of the day is the lizard on the rock, and at which time is it at the bush? Is there any time when the lizard cannot be at any of the locations?\n\nBody temperature of A. cristatellus in two different habitats\n\n\n\nMake a linear model for individuals of A. cristatellus living only in natural habitats (context = natural) and another for individuals living in urban habitats (context = urban).\n\n\n\n\nIs there a habitat where lizards are consistently warmer? If so, provide an ecological explanation (quantitatively) for this observation (assume an ambient temperature of 30 °C).\nIs your model appropriate for explaining your data?",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>B</span>  <span class='chapter-title'>Computational labs</span>"
    ]
  },
  {
    "objectID": "labs.html#optimal-foraging-theory",
    "href": "labs.html#optimal-foraging-theory",
    "title": "Appendix B — Computational labs",
    "section": "B.2 Optimal foraging theory",
    "text": "B.2 Optimal foraging theory\n\nPredator with a strategy for maximizing energy.\nLet ai be the point abundance per unit of time of prey type i, ei be the caloric content of prey type i, hi be the time it takes to consume prey type i, ew is the energy expended per unit of time by the predator while searching for prey, and eh is the energy expended per unit of time by the predator to ingest prey. Consider that there are only two types of prey and that:\nStrategy 1: Chosing prey of type 1\nStrategy 2: Chosing prey of type 2\nStrategy 3: Chosing both preys\n\nShow that if e1&gt; e2 and h1 &lt;h2 then the second strategy is never a optimal strategy\nPlot and comment the graph of the energy gain per unit of time for the strategy of consuming both preys and for the strategy of consuming only the best prey. Make the abundances vary between 0.005 and 0.5 ind/s for the best prey. Consider the abundance of the worse prey to be 0.05 ind/s and 0.01 ind/s. Consider an active predator with the following physiological parameters:\ne1 = 10J; e2 = 100J; h1 = 1s; h2 = 60s; ew = 1 J/s; eh = 1 J/S\n\nPredator with a strategy of sit-and-wait.\nEw is the energy expended per unit of time by the predator while waiting for its prey, ep is the energy expended per unit of time by the predator while chasing the prey, v is the velocity of the predator in chase and a is the point abundance of preys per unit of time.\n\nProduce a graph of energy gain per unit of time in function of the size of the feeding territory. Consider the following values for the parameters of the predator and prey: ew = 0,1 J/s; ep = 1 J/S; v = 0,5 m/s; a = 0,005 ind/s/m2; and e = 10;",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>B</span>  <span class='chapter-title'>Computational labs</span>"
    ]
  },
  {
    "objectID": "labs.html#evolutionary-games",
    "href": "labs.html#evolutionary-games",
    "title": "Appendix B — Computational labs",
    "section": "B.3 Evolutionary games",
    "text": "B.3 Evolutionary games\n\nThe Prisoners Dilemma Competition. In this class we will have a competition of algorithms for playing the prisoner’s dilemma.\n\nWrite a function that takes as parameters two vectors that account with the history of the previous plays and returns one play (i.e., Cooperate – “C” or defect – “D”). This play should try to be the best response to the history of past moves. One example of such a function is:\n\n\n    strat&lt;-function(own,opponent)\n    {\n        n &lt;- length(opponent)\n             if(n==0) \"D\"\n            else\n                if(own[n]==\"D\") opponent[n]\n               else \"C\"\n    }\n\nUse the function pd_sim (see below) to play your strategy with the strategy of the other groups (ask for each group their function(s)) and with itself, in an iterative game with x moves. Compare the results of the cumulative rewards as well as the sequence of moves. Report to the rest of groups the values of the rewards for each of the tournaments. What was the best strategy? What strategies are best responses to themselves?\n\npd_sim&lt;-function(p1_strat,p2_strat,n)\n{\n w1&lt;-0          #accumulated pay-off (fitness) of player 1\n w2&lt;-0          #accumulated pay-offs of player 2\n h1&lt;-NULL       #history of plays of player 1\n h2&lt;-NULL       #history of plays of player 2\n\n for (t in 1:n)            \n   {\n    a1&lt;-p1_strat(h1,h2) \n    a2&lt;-p2_strat(h2,h1) \n    p1&lt;-mat[a1,a2] \n    p2&lt;-mat[a2,a1]         \n    w1&lt;-w1+p1              \n    w2&lt;-w2+p2             \n    h1[t]&lt;-a1                   \nh2[t]&lt;-a2                   }   \n list(w1=w1,w2=w2,h1=h1,h2=h2)\n}",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>B</span>  <span class='chapter-title'>Computational labs</span>"
    ]
  },
  {
    "objectID": "labs.html#dispersal-and-the-random-walk",
    "href": "labs.html#dispersal-and-the-random-walk",
    "title": "Appendix B — Computational labs",
    "section": "B.4 Dispersal and the random-walk",
    "text": "B.4 Dispersal and the random-walk\n\nRandom walk for 1 individual\n\nCreate your own code to simulate an individual random walk. Assume that the starting point is always x,y =(0,0) and the probability of an individual to choose any direction (i.e. left, right, up or down) is the same. It should be a function taking as argument the number of steps and returning a list of two vectors, one with the x positions over time and another with the y positions overtime.\nPlot together the random walks (at least 5000 steps) of a few individuals. \n\nRandom walk for several (n) individuals\n\nCreate your own code to simulate random walks by several (n)individuals and returns the last position of each individual. It should be a function that takes as arguments the number of individuals and the numbers of time steps, and returns a list of two vectors, the last x position of each individual, and the last y position of each individual.\nCreate a histogram showing the distribution of the x and y last positions of 10 000 individuals after 10 time steps, 100 time steps and 1 000 time steps.\nCreate a function that receives as parameters a vector of values xlast, a mean value (meanx) and a standard deviation (stdx) and returns the log-likelihood of observing those values for those parameters.\nFind the value meanx and stdx that maximize the likelihood of the observations. Are they the same as mean(xlast) and std(xlast)? Why?\nExtra credit: Create a histogram showing the distribution of the distance to the origin (sqrt(x^+y^2)) of the last positions of 10 000 individuals for 10 time steps, 100 time steps, 1000 time steps and 10000 time steps. What is the relationship between the length of the randomwalk and the mean distance? Fit the Rayleigh distribution (2 r / sigma^2) * exp(-r^2/2 sigma^2) using non-linear fitting to each of the histograms and overlay it on the graph.",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>B</span>  <span class='chapter-title'>Computational labs</span>"
    ]
  },
  {
    "objectID": "labs.html#pandemic-growth",
    "href": "labs.html#pandemic-growth",
    "title": "Appendix B — Computational labs",
    "section": "B.5 Pandemic growth",
    "text": "B.5 Pandemic growth\n\nThe exponential dynamics of the pandemic. In early 2020, the first wave of the global pandemic of COVID-19 hit several European countries. Here we will plot the data for those countries and fit an exponential growth model.\n\nLoad the cumulative infected individuals time series from the COVID-19 pandemic in five countries. Each time series starts after the first fifteen infections are detected.1\n\nit &lt;- c(17, 79, 132, 229, 322, 400, 650, 888, 1128, 1689, 2036, 2502, \n3089, 3858, 4636, 5883, 7375, 9172, 10149, 12462, 15113, 17660, 21157,\n23980, 27980, 31506, 35713, 41035, 47021, 53578) #Feb22-March22\n\nes &lt;- c(17, 35, 54, 82, 136, 192, 267, 348, 531, 764, 1094, 1527, 2299,\n3274, 4427, 5958, 7641, 9785, 11491, 13994, 17688, 21735, 26304, 31750,\n36616, 41262, 48953, 57506, 66460, 75641) #Feb27-March27\n\nfr &lt;- c(17, 38, 57, 100, 130, 178, 212, 285, 423, 613, 716, 1126, 1412,\n1784, 2281, 2876, 3661, 4499, 5423, 6633, 7730, 9134, 10995, 12612, 14459, \n16018, 19856, 22302, 25233, 29155) #Feb27-March27\n\nuk &lt;- c(18, 22, 30, 42, 47, 69, 109, 164, 220, 271, 352, 412, 469, 617, \n876, 1282, 1766, 2244, 2605, 3047, 3658, 4427, 5426, 6481, 7736, 8934, \n10312, 12650, 15025, 17717) #Feb27-March27\n\nde &lt;- c(17, 21, 47, 57, 111, 129, 157, 196, 262, 400, 684, 847, 902, 1139, \n1296, 1567, 2369, 3062, 3795, 4838, 6012, 7156, 8198, 14138, 18187, 21463, \n24774, 29212, 31554, 36508) #Feb26-March26\n\nPlot the data in a linear plot, coloring each country with a different colour. What do you observe?\nPlot the data in a semi-log plot (using the plot option log=”y”), coloring each country with a different color. What do you observe?\nCarry out a linear regression with the data of each country (using the log of the n values) and estimate the growth rate R. Are the values the same for all countries? Do they vary over time?\nKnowing that \\[R_0 = R^\\tau\\] and that the infectious period (\\(\\tau\\)) duration is 10 days, what are the \\(R_0\\)’s in different countries?\nWrite a for loop to simulate geometric (exponential) growth, going from time t in 1:100, and storing the population size values at each time step t+1 in variable n based on the population values at time t, i.e. n[t+1]&lt;-R*n[t]. Don’t forget to initialize the population size before the for loop with n&lt;-1. Plot a couple of runs of the for loop with different R values (for instance R=1.01 and R=1.1) in linear scale.\nGiven that you know the solution of the geometric growth equation to be \\(n(t)=n_0 R^t\\), create a vector of values with this formula using the same R as you used above, but starting with n0&lt;-2 and overlay them on the plot.",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>B</span>  <span class='chapter-title'>Computational labs</span>"
    ]
  },
  {
    "objectID": "labs.html#population-viability-analysis",
    "href": "labs.html#population-viability-analysis",
    "title": "Appendix B — Computational labs",
    "section": "B.6 Population Viability Analysis",
    "text": "B.6 Population Viability Analysis\n\n\nConsider a population with exponential growth but that exhibits environmental stochasticity, with the logarithm of the population growth rate following a normal distribution with mean \\(\\bar{r}=\\log(\\bar{R})\\) and variance \\(v\\). Assume that the population has an on-off density dependence and cannot grow above the carrying capacity \\(K\\). According to Foley (1994)2 the expect time to extinction is \\[T=\\frac{1}{s r}[e^{s \\log(k)}(1-e^{-s \\log(N_0)} )-s \\log(N_0)]\\] where \\(s=2r/v\\).\n\nPlot the mean extinction times, \\(T\\), as a function of \\(r\\), \\(v\\), \\(n_0\\), and \\(K\\). Please comment each plot. \\(r\\) can carry from 0.01 to 0.2, \\(v\\) can vary from 0.05 to 1.0, \\(n0\\) can vary from 0 to 10, and \\(K\\) can vary from 10 to 500. Use as base parameters n0=10, K=100, v=0.3 and r=0.01.\nWrite a function that simulates a population with these dynamics numerically. Start by using the for loop that you developed in Lab 2 and modify it to include a carrying capacity and growth rate that is taken every year from a normal distribution. The function should take parameter n0, r, v, and K. It should return the vector of the population sizes over time.\nSimulate the dynamics with the following parameters:\n\nn0=3; r=0.01; v=0.2; K=500\nn0=100; r=0.01; v=0.2; K=500;\n\nExtended credit: Compare the model predictions with the results from the analytical approximation of Foley. You need to do many simulations to reach the predicted extinction times from Foley. For instance, you can create a function that call the function developed in (b) and executes it 100 times, returning the median time to extinction across the simulations.",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>B</span>  <span class='chapter-title'>Computational labs</span>"
    ]
  },
  {
    "objectID": "labs.html#the-camera-trapper",
    "href": "labs.html#the-camera-trapper",
    "title": "Appendix B — Computational labs",
    "section": "B.7 The camera trapper",
    "text": "B.7 The camera trapper\nA researcher place camera traps at a grid of sites during 19 days to observe roe-deer.\n\nLoad the data on the file roe_deer_2016_r.csv into R. Briefly describe the structure of the dataset.\nCase 1: Ignoring detection probability.\n\nBuild a vector that for each site takes value 1 when roe-deer is present and 0 when is absent.\nUsing maximum-likelihood estimate the occupancy probability (\\(\\psi\\)). First create a function that takes as parameters psi and a vector of presence/absences and returns the likelihood. Then plot that function for a range of \\(\\Psi\\) values and find the \\(\\psi\\) value that maximizes the function.\nAssume that based on previous work we know that occupancy is somewhat between 0.2 and 0.5. Using a Bayesian approach, calculate the posterior probability distribution for the occupancy \\(P(\\psi)\\).\n\nHelp: A function returning the \\(P(\\psi|data)\\) . It takes as parameters a vector y of presences/absences, a value for psi, and a function for the prior distribution of \\(\\psi\\) named priorpsi:\noccupancybayesian &lt;- function(y,psi,priorpsi)\n{\n  integrand &lt;- function(x)\n      occupancylikelihood(y,x)*priorpsi(x)\n  occupancylikelihood(y,psi)*priorpsi(psi)/\n      integrate(integrand, lower = 0.01, upper = 0.99)$value\n}\nA function returning \\(P(\\psi)\\), the prior distribution of \\(\\psi\\) values. It takes as parameters a value for psi.\nprior &lt;- function(psi) \n{ \n  dunif(psi,0.2,0.5) \n}\nCase 2: Using a hierarchical model with detection probability\n\nUsing maximum-likelihood estimate the occupancy probability (\\(\\Psi\\)) and detection probability (\\(p\\)).",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>B</span>  <span class='chapter-title'>Computational labs</span>"
    ]
  },
  {
    "objectID": "labs.html#managing-a-fishery",
    "href": "labs.html#managing-a-fishery",
    "title": "Appendix B — Computational labs",
    "section": "B.8 Managing a fishery",
    "text": "B.8 Managing a fishery\n\nConsider that you are managing a fishery with the following dynamics: \\[dn/dt = 0.2 n (1-n/10000) \\]\n\nPlot the production function of the fishery, indicating the stock size for the maximum sustainable yield and the corresponding production level.\nSuppose you establish an annual quota (harvest) that is equivalent to 50% of the maximum sustainable yield. What are the two stock size levels that sustainably allow that exploitation level?\nExplore what happen when you manage this fishery for 100 years. Start by writing a function that simulates the logistic growth above with a constant harvest. The function should take as parameters the initial population size n0 (the stock of the fishery), the annual harvest h, and the number of years for which you simulate the population dynamics and return a vector with the population sizes over time. Discuss the results of the following experiments.\n\nExperiment 1: Set the harvest equal to the production at MSY and initial population size at carrying capacity.\nExperiment 2. Set the harvest equal to the production at MSY and initial population size at the stock size of MSY\nExperiment 3. Set the harvest equal to 50% of the maximum sustainable yield and initial population size at carrying capacity.\nExperiment 4. Set the harvest equal to the production at MSY and initial population size at the stock size of MSY - 1000 individuals.\nExperiment 5. Set the harvest equal to the production at MSY and initial population size at the stock size of MSY - 1000 individuals.\n\nExplain why in a system with constant quotas, MSY is not stable and should not be the management goal.\nExtra credit: Modify the logistic growth function to have stochastic dynamics so that there is a variance of 10% in the annual productivity. Simulate again experiment 2 a few times. What happens?\nDiscuss how these results relate with the paper of Worm et al (2009) about the need to rebuild fisheries.\n\n\n\n\n\nAtlantic cod (Gadus morhua). Source: Hans-Petter Fjeld, CC-BY-SA, Wikipedia.",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>B</span>  <span class='chapter-title'>Computational labs</span>"
    ]
  },
  {
    "objectID": "labs.html#road-kill",
    "href": "labs.html#road-kill",
    "title": "Appendix B — Computational labs",
    "section": "B.9 Road Kill",
    "text": "B.9 Road Kill\nPopulations in space and the impacts of roads\n\n\n\n\n\n\n\nThe Red fox\n…So, while they may be most active at night.\nRed foxes are especially active during the\ndaytime in spring and summer (April-Sept)\nas they are foraging for food to feed their young.\nSource photo: Wikipedia, CC0.\n\n\n\n\nGoals of the exercise:\n\nIdentify road segments with hotspots of red fox-car-collisions.\nWhat impact do activity patterns have on the rate of animal-car-collision hotspots?\nUse the False Discovery Rate (FDR) method to identify such hotspots.\n\n\nPlease install the following R packages\n\nlibrary(readxl)\nlibrary(dplyr)\nlibrary(sf)\nlibrary(ggplot2)\nlibrary(fuzzySim)\nlibrary(grid)\n\nLoad the roadkill dataset.\nExplain the structure of the dataset.\nShow that differences in seasonal activity patterns impact the FDR hotspot results in red fox-car-collisions.\nHow many hotspots were detected for the active season?\nPlot, based on the FDR method, true and “false” hotspots. Explain the general geographic locations of the hotspots and those vary between the two different seasons.\nThink about conservation management implications.",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>B</span>  <span class='chapter-title'>Computational labs</span>"
    ]
  },
  {
    "objectID": "labs.html#simulating-a-neutral-community",
    "href": "labs.html#simulating-a-neutral-community",
    "title": "Appendix B — Computational labs",
    "section": "B.10 Simulating a neutral community",
    "text": "B.10 Simulating a neutral community\n\nThe neutral theory in ecology provides a mechanistic explanation for species abundance distributions. It seeks to understand the impact of speciation, extinction, dispersal and ecological drift on the species abundance distribution (SAD), assuming that all species have equal opportunities (Hubbell, 2001).\nIt is important to note that the neutral theory is a model created to explain a pattern of relative abundance within communities, but it does not necessarily reflect reality (communities’ mechanisms). The neutral theory utilizes a model based on the dynamics of a species’ population, which is governed by generalized birth and death events, including speciation, immigration, and emigration (Rosindell et al (2011).\n\n\n\nDiagram of the dynamics of communities in the neutral theory of biodiversity (from Rosindell et al 2011).\n\n\nThe neutral theory paradox is that in absence of migration or mutation diversity gradually declines to zero or monodominance. Let’s see what happens to species richness and the species abundance distribution over time for different parameters of the model. Start by installing the package untb.\n\nWithout mutation or dispersal (pure ecological drift): We start with a local community with 20 species, each with 25 individuals. The simulation then runs for 2500 generations where 10 individuals die per generation. Mutation rate is zero and immigration rate is zero\n\nPlot the number of species over time.\nPlot the species abundance distribution at time 1, 100 and 2500\nPlot the map of individuals at those time steps.\n\nWith point mutation: Same parameters as (1) but with speciation rate of 0.1.\n\nPlot the number of species over time.\nPlot the species abundance distribution at time 1, 100 and 2500\nPlot the map of individuals at those time steps.\n\n[Extra Credit] With immigration: Same parameters as (1) but immigration rate greater than zero. Play with different abundance distributions for the metacommunity.",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>B</span>  <span class='chapter-title'>Computational labs</span>"
    ]
  },
  {
    "objectID": "labs.html#monitoring-biodiversity",
    "href": "labs.html#monitoring-biodiversity",
    "title": "Appendix B — Computational labs",
    "section": "B.11 Monitoring biodiversity",
    "text": "B.11 Monitoring biodiversity\n\nExploring the BBS dataset\n\nLoad the file Florida.csv into R. Briefly describe the structure of the dataset.\nMap the monitored transects/routes in Florida’s map. Use the maps library to plot the counties of florida as a base map.\nFor transect 4 and transect 109 in year 2018 plot calculate the species richness, Shannon diversity index H and evenness J of both transects, with H being \\[H=-\\sum_i (p_i \\ln p_i)\\] where \\(p_i\\) is defined as the proportion of individuals found in species \\(i\\). Compare the two transects.\nPlot the species abundance distribution and abundance-rank for both transects. What do you observe?\nChoose one transect and plot the species richness, Shannon diversity, and geometric mean abundance over time\nExtra credit 1: Produce a map of the trends of one these metrics across Florida (for instance coloring different points according to the trend)\nExtra credit 2: Estimate the number of species in Florida by combining the different transects and using one of the estimators. Use bootstrap and/or jacknife to calculate confidence intervals.",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>B</span>  <span class='chapter-title'>Computational labs</span>"
    ]
  },
  {
    "objectID": "labs.html#footnotes",
    "href": "labs.html#footnotes",
    "title": "Appendix B — Computational labs",
    "section": "",
    "text": "Data source: https://github.com/owid/covid-19-data/tree/master/public/data, accessed 8 Nov 2020↩︎\nFoley, P. (1994) Predicting Extinction Times from Environmental Stochasticity and Carrying-Capacity. Conservation Biology 8: 124–137.↩︎",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>B</span>  <span class='chapter-title'>Computational labs</span>"
    ]
  },
  {
    "objectID": "labs_tutorials.html",
    "href": "labs_tutorials.html",
    "title": "Appendix C — Tutorials to support computational labs",
    "section": "",
    "text": "C.1 Plotting real life ecophysiological from Anolis lizards\nBy Andres Marmol\nWhy anoles? Anoles are among the most studied reptile organisms. They are vastly diverse with more than 488 species described until today — circa 11% of all the squamates without considering snakes — due to their outstanding adaptive radiation, which has inspired many to dive-in-depth into understanding how evolution has operated within this group (Lizards in an Evolutionary Tree by J. B. Losos is a highly recommended instructive reading for more info). As a result, very detailed data sets on many species of anoles, including information on micro habitat, field body temperature, activity patterns and morphological traits, performance, etc., can be found online in relatively few time.\nIn the following steps we will be downloading from Dryad and using a data set created by Winchell et al. (2016) (https://doi.org/10.5061/dryad.h234n) on Anolis cristatellus making a pair-comparison of several morphological and thermal traits of individuals living in urban and forested areas at Puerto Rico. A. cristatellus is widely distributed across Puerto Rico and can be found in natural and human-intervened spaces easily. It can be seen over ground and laying on the trunks of trees in natural settings, and on walls and metal fences in more urban areas.",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>C</span>  <span class='chapter-title'>Tutorials to support computational labs</span>"
    ]
  },
  {
    "objectID": "labs_tutorials.html#sec-tutorial",
    "href": "labs_tutorials.html#sec-tutorial",
    "title": "Appendix C — Tutorials to support computational labs",
    "section": "",
    "text": "C.1.1 Calling the dataset from Dryad\nTo download the dataset, it is necessary to install the R package rdryad.\n\ninstall.packages(\"rdryad\")\n\nThen we open the newly installed package and download the dataset by specifying the DOI associated to this dataset.\n\n#calling rdryad\nlibrary(rdryad)\n\n# Specify the DOI\ndoi &lt;- \"10.5061/dryad.h234n\"\n\n# Download the dataset using the dryad_download function\ndownloaded_file &lt;- dryad_download(dois = doi)\n\nThe data sets are now downloaded on the paths indicated in the box below, although for this exercise only table [2] winchell_evol_phenshifts.csv” is needed.\n\n# The downloaded_file will contain the file path where the dataset is saved\nprint(downloaded_file)\n\n$`10.5061/dryad.h234n`\n[1] \"/Users/henrique/Library/Caches/R/rdryad/10_5061_dryad_h234n/winchell_evol_CG.csv\"        \n[2] \"/Users/henrique/Library/Caches/R/rdryad/10_5061_dryad_h234n/winchell_evol_phenshifts.csv\"\n\n\nOnce this is done, it is always good practice to check if the recently open data frame works by checking the columns within the data frame.\n\n#calling the dataset of interest as df\ndf &lt;- read.csv(downloaded_file[[1]][2])\n\n# checking the columns (variables) available in the data frame df using the str function\nnames(df)\n\n [1] \"ID\"                 \"date\"               \"Site\"              \n [4] \"context\"            \"perch\"              \"bodytemp.C\"        \n [7] \"perch.temp.C\"       \"ambient.temp.C\"     \"humidity.percent\"  \n[10] \"perch.height.cm\"    \"perch.diam.cm\"      \"weight.g\"          \n[13] \"head.height.mm\"     \"svl.mm\"             \"local.time.decimal\"\n[16] \"flags\"              \"JL\"                 \"JW\"                \n[19] \"METC\"               \"RAD\"                \"ULN\"               \n[22] \"HUM\"                \"FEM\"                \"TIB\"               \n[25] \"FIB\"                \"METT1\"              \"METT2\"             \n[28] \"FL\"                 \"HL\"                \n\n\nThere are 29 different variables within df, but this exercise will focus only in a few of them including context, perch, bodytemp.C, perch.temp.C, ambient.temp.C, and local.time.decimal where context indicates if the lizard was captured in natural or urban spaces; perch refers to the microhabitat where the lizard was found; bodytemp.C is body temperature \\(b\\); perch.temp.C is substrate temperature \\(T_s\\); ambient.temp.C is air temperature \\(a\\); and local.time.decimal is the time of the day in hours when the lizards was captured and measured.\n\n\nC.1.2 Exploring the thermophysiological data of A. cristatellus.\nAs covered in the first chapter, \\(b\\) increases proportionally to \\(a\\) as indicated in equation (1.2). Let’s check if the data confirms this equation.\n\n# to call a variable directly from a data frame one must use $, indicating the name of the dataframe at the left and the name of the variable (columnt on the right).\n\nplot(df$ambient.temp.C, df$bodytemp.C,\n     xlab=\"air temperature (°C)\",\n     ylab=\"body temperature (°C)\")\n\n\n\n\n\n\n\n\nIn the plot we can observe that indeed body temperature increases with increasing temperature. However, we cannot quantitatively know how much is this increase. For that, we can model how air temperature affects body temperature modelling them a a line with the equation:\n\\[\n\\hat{y} = α + β*x + e\n\\tag{C.1}\\] where \\(\\hat{y}\\) is the predicted value of \\(y\\) for any given \\(x\\); \\(α\\) is point of intersection of the line when \\(x=0\\), \\(β\\) is the slope of the regression line (i.e. how much increases \\(\\hat{y}\\) with a unit increase in \\(x\\)) and \\(e\\) is the random error.\nPlacing our variables in formula, it would look like this:\n\\[\nb = b_{0} + β*a + e\n\\tag{C.2}\\]\nwhere \\(b\\) is body temperature, \\(a\\) is ambient temperature, and \\(b_0\\) is the body temperature when \\(a\\) is zero.\nNow lets model it using a least-squares linear regression using the lm function in R.\n\n#define the linear model\n#the variable at the left of the tilde (~) is the dependent variable\n#data calls the specific dataframe to be used.\n\nmodel1 &lt;- lm(bodytemp.C ~ ambient.temp.C, data=df)\n\n# print model outputs\nprint(model1)\n\n\nCall:\nlm(formula = bodytemp.C ~ ambient.temp.C, data = df)\n\nCoefficients:\n   (Intercept)  ambient.temp.C  \n        8.7004          0.7237  \n\n\n\n\nC.1.3 Interpreting the results of our model.\nThe results of our model indicates that if the air temperature (\\(a\\)) is zero, A. cristatellus would show a body temperature (\\(b\\)) of 8.7 °C, which increases in approximately 0.7 °C for each 1 °C increase in air temperature.\nNow it is also possible to draw a few predictions\n\n# a number of possible ambient temperatures that can be found in Puerto Rico during the day\n\namb_temps = data.frame(ambient.temp.C = seq(27,38, 1))# defines a vector with values from 27 to 38, with one unit increase\n\npredict(model1, newdata=amb_temps)\n\n       1        2        3        4        5        6        7        8 \n28.23967 28.96335 29.68702 30.41070 31.13437 31.85805 32.58172 33.30540 \n       9       10       11       12 \n34.02907 34.75275 35.47642 36.20010",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>C</span>  <span class='chapter-title'>Tutorials to support computational labs</span>"
    ]
  },
  {
    "objectID": "labs_tutorials.html#how-good-our-model-is-performing",
    "href": "labs_tutorials.html#how-good-our-model-is-performing",
    "title": "Appendix C — Tutorials to support computational labs",
    "section": "C.2 How good our model is performing?",
    "text": "C.2 How good our model is performing?\nGraphically the linear model fits the data as follows:\n\n# Create the scatter plot\nplot(df$ambient.temp.C, df$bodytemp.C,\n     xlab=\"air temperature (°C)\",\n     ylab=\"body temperature (°C)\")\n\n# add the line of fit from our recently created linear model \"model1\"\nabline(model1, col = \"red\", lwd= 2)\n\n\n\n\n\n\n\n\nThe red line in the plot follows very well the pattern of increase shown by our data. It is noticeable, however, that some points fall farther from the line of best fit than others. In other words, many \\(\\hat{y}\\) values (body temperature) are predicted with larger errors than others, for a given \\(x\\) value (ambient temperature). These errors are also known as residuals, and are the vertical distance between the observed values and the line of best fit. They are graphically represented in green in our plot:\n\n\n\n\n\n\n\n\n\nWhat a least square linear regression does is to find the lowest sum of squares of the residuals (every green line in the plot) so that the least amount of error is kept in the linear model.\nFinally, how well the model fits the data? In our example, the body temperatures do not perfectly fall on the line of best fit, and many of them are scattered around it. A common metric assess this question in a simple regression model is the \\(r^2\\). \\(r^2\\) values indicates how much of the variance of body temperature (our dependent variable) is explained by ambient temperature (our independent variable). A perfect fit is indicated by an \\(r^2\\) of 1, while no fit would be zero. To check the \\(r^2\\) in our model we can simply use the summary function in R.\n\n# obtaining the r-squared of our model\n\nsummary(model1)$r.squared\n\n[1] 0.5736088\n\n\n\\(r^2\\) equals 0.574 indicating that almost 60% of the variance in body temperature is explained by ambient temperature.\nIn summary, our expectation that lizards body temperature increases depending on how the temperature in their environment changes has been confirmed. Specifically for A. cristatellus in this study, body temperature increases ~ 0.7 °C every 1 degree increase in air temperature. A few questions remain. For example, does habitat has an effect in the body temperature in A. cristatellus, and if it does, how different could the body temperatures of the lizards in habitat A are from those in habitat B?",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>C</span>  <span class='chapter-title'>Tutorials to support computational labs</span>"
    ]
  }
]